{"version":3,"sources":["components/Post.js","components/PostForm.js","Home.js","components/NavBar.js","SelectedPost.js","components/Forum.js","components/ForumForm.js","components/Forums.js","components/LogInForm.js","components/RegisterForm.js","components/SelectedForum.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Post","title","text","deletePost","id","coffees","updatePost","username","sessionUsername","savePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","className","to","onClick","prev","style","opacity","transition","visibility","display","onMouseLeave","newPost","likes","prevState","PostForm","addPost","forum","setNewPost","errorState","setErrorState","isOpen","setIsOpen","lengthEnsureFunction","split","length","height","onSubmit","e","preventDefault","fontSize","marginBottom","cursor","margin","userSelect","width","type","onChange","target","value","placeholder","rows","Home","postsList","user","map","post","_id","NavBar","setDisplayShow","displayShow","navBarOpen","setNavBarOpen","searchText","setSearchText","foundPosts","setFoundPosts","foundsList","forEach","toLowerCase","includes","push","array","newArray","item","indexOf","putLimit","color","SelectedPost","setPostsList","selectedPost","setSelectedPost","original","actual","setCoffees","useParams","postId","editingParam","editing","setEditing","useEffect","axios","get","then","res","newSelectedPost","data","flexDirection","transform","updatedPost","put","posts","Forum","name","description","ForumForm","showModal","setShowModal","createForm","randomMsg","setRandomMsg","newForum","setNewForum","msgOption","Math","floor","random","classList","Forums","forums","searchedForum","setSearchedForum","foundForums","setFoundForums","textAlign","LogInForm","logInFunction","password","formUser","setFormUser","handleSubmit","marginRight","RegisterForm","registerFunction","SelectedForum","props","users","selectedForum","setSelectedForum","console","log","Profile","logOutFunction","App","setForums","setUser","newPostList","delete","window","path","newForm","alert","createdAt","savedPosts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA4EeA,EAzEF,SAAC,GAA6F,IAA5FC,EAA2F,EAA3FA,MAAOC,EAAoF,EAApFA,KAAMC,EAA8E,EAA9EA,WAAYC,EAAkE,EAAlEA,GAAKC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,SACzF,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,CAACG,OAAM,EAAOC,QAAQT,IAAvE,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,UAoBA,OACQ,sBAAMC,UAAU,aAAhB,UACI,eAAC,IAAD,CAAMC,GAAE,eAAUf,GAAMc,UAAU,YAAlC,UACI,oBAAIA,UAAU,aAAd,SAA4BjB,IAC5B,qBAAIiB,UAAU,gCAAd,qBAAuDX,KACvD,mBAAGW,UAAU,YAAb,SAA0BhB,OAE9B,sBAAKgB,UAAU,eAAf,UACI,gCACI,wBAAQE,QAAS,kBAAMR,GAAW,SAAAS,GAAI,OAAMA,MAA5C,SACI,cAAC,IAAD,MAEJ,qBAAKC,MAAOX,EAAU,CAACY,QAAQ,IAAKC,WAAW,OAAS,CAACD,QAAQ,IAAIC,WAAW,MAAOC,WAAW,UAAlG,SACI,qBAAIP,UAAU,sBAAd,UACI,6BACI,wBACAE,QAnBT,WACnBX,EAASL,IAmBmBc,UAAWD,EAAY,SAAW,OAFlC,SAGKA,EACA,cAAC,IAAD,IACA,cAAC,IAAD,QAGT,oBAAIK,MAAOf,IAAaC,EAAkB,GAAK,CAACkB,QAAQ,QAAxD,SACI,wBAAQN,QAzCnB,WACjBjB,EAAWC,IAwCgDc,UAAU,SAAzC,SACI,cAAC,IAAD,QAGR,oBAAII,MAAOf,IAAaC,EAAkB,GAAK,CAACkB,QAAQ,QAAxD,SACI,cAAC,IAAD,CAAMP,GAAE,eAAUf,EAAV,YAAR,SACI,wBAAQc,UAAU,OAAlB,SACI,cAAC,IAAD,kBAOxB,yBACAS,aArDQ,WACpB,GAAItB,IAAYU,EAAaD,QAAS,CAClC,IAAMc,EAAU,CACZ3B,QACAC,OACA2B,MAAMd,EAAaD,SAEvBR,EAAWF,EAAIwB,KA+CPR,QAAS,kBAAMJ,GAAgB,SAAAc,GAAS,MAAK,CAACjB,OAAM,EAAMC,QAAQgB,EAAUhB,QAAU,OACtFI,UAAW,oBAHX,UAII,cAAC,IAAD,IACJ,uBAAMA,UAAU,sBAAhB,cAAwCH,EAAaD,QAAU,EAAIC,EAAaD,QAAU,KAA1F,iB,uBCiBLiB,EAnFE,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASzB,EAAa,EAAbA,SAExB,EAA8BG,mBAAS,CAACT,MAAM,GAAIC,KAAK,GAAI+B,MAAM,KAAjE,mBAAOL,EAAP,KAAgBM,EAAhB,KACA,EAAoCxB,mBAAS,IAA7C,mBAAOyB,EAAP,KAAmBC,EAAnB,KACA,EAA4B1B,oBAAS,GAArC,mBAAO2B,EAAP,KAAeC,EAAf,KAEMC,EAAuB,WACzB,MAAsB,KAAlBX,EAAQ3B,MACD,EAAC,EAAO,gCAEE,KAAjB2B,EAAQ1B,KACD,EAAC,EAAO,+BAEf0B,EAAQ3B,MAAMuC,MAAM,IAAIC,OAAS,IAC1B,EAAC,EAAO,wCAEfb,EAAQ1B,KAAKsC,MAAM,IAAIC,OAAS,IACzB,EAAC,EAAO,uCAEP,EAAC,EAAM,KA8B3B,OACI,uBAAMnB,MAAOe,EAAS,GAAK,CAACK,OAAO,QAASC,SA5BvB,SAAAC,GACjBA,EAAEC,iBACCtC,IACKgC,IAAuB,IACvBP,EAAQ,CAAC/B,MAAM2B,EAAQ3B,MAAOC,KAAK0B,EAAQ1B,KAAMK,aACjD2B,EAAW,CAACjC,MAAM,GAAIC,KAAK,KAC3BoC,GAAU,GACVF,EAAcG,IAAuB,KAErCH,EAAcG,IAAuB,KAGzChC,GACA6B,EAAc,8BAe8ClB,UAAU,0CAA9E,UACI,sBAAKE,QALmB,WACxBkB,GAAU,SAAAR,GAAS,OAAKA,MAIYR,MAAO,CAACwB,SAAS,OAAQC,aAAa,OAAQC,OAAO,WAAY9B,UAAU,mEAA/G,UACI,oBAAII,MAAO,CAAC2B,OAAO,IAAKC,WAAW,QAAnC,yBACA,wBACAhC,UAAWmB,EACV,6DACA,4DAEDf,MAAO,CAACoB,OAAO,OAAQS,MAAM,QAC7BC,KAAK,SANL,SAOKf,EACC,cAAC,IAAD,IACA,cAAC,IAAD,SAIV,qBAAKnB,UAAU,YAAf,SACI,uBAAOmC,SA5BW,SAAAT,GACtBV,GAAW,SAAAJ,GAAS,kCAASA,GAAT,IAAoB7B,MAAM2C,EAAEU,OAAOC,YA2BfA,MAAO3B,EAAQ3B,MAAOuD,YAAY,QAAQJ,KAAK,OAAOlC,UAAU,eAAe,mBAAiB,gBAIxI,qBAAKA,UAAU,OAAf,SACI,0BAAUmC,SA7BO,SAAAT,GACrBV,GAAW,SAAAJ,GAAS,kCAASA,GAAT,IAAoB5B,KAAK0C,EAAEU,OAAOC,YA4BZA,MAAO3B,EAAQ1B,KAAOsD,YAAY,OAAOtC,UAAU,eAAeuC,KAAK,QAEjH,gCACA,wBAAQL,KAAK,SAASlC,UAAU,oBAAhC,kBACA,wBAAOI,MAAO,CAAC4B,WAAW,QAAShC,UAAU,OAA7C,cAAsDiB,EAAtD,cC3COuB,EAjCF,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,UAAW3B,EAAqD,EAArDA,QAAS7B,EAA4C,EAA5CA,WAAYG,EAAgC,EAAhCA,WAAYsD,EAAoB,EAApBA,KAAMnD,EAAc,EAAdA,SAChE,OAEI,sBAAMS,UAAU,yCAAhB,SACE,0BAASA,UAAU,cAAnB,UACE,qBAAKA,UAAU,sCAAf,SACE,cAAC,EAAD,CACAc,QAASA,EACTzB,WAAUqD,GAAOA,EAAKrD,aAGxB,qBAAKW,UAAU,sBAAf,SACGyC,EAAUE,KAAI,SAAAC,GAAI,OACjB,cAAC,EAAD,CACArD,SAAUA,EAEVH,WAAYA,EACZL,MAAO6D,EAAK7D,MACZC,KAAM4D,EAAK5D,KACXC,WAAYA,EACZC,GAAI0D,EAAKC,IACTxD,SAAUuD,EAAKF,KACfvD,QAASyD,EAAKjC,MACdrB,gBAAiBoD,EAAOA,EAAKrD,SAAW,IARnCuD,EAAKC,gB,gCCwFTC,EAvGA,SAAC,GAA6E,IAA5EL,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,KAAMK,EAA0D,EAA1DA,eAAgBC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,WAAWC,EAAkB,EAAlBA,cAEtE,EAAoC1D,mBAAS,IAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KACA,EAAoC5D,mBAAS,IAA7C,mBAAO6D,EAAP,KAAmBC,EAAnB,KA8BA,OACI,sBAAKpD,QAAS,kBAAMgD,GAAc,IAAQlD,UAAS,iBAAYiD,EAAa,aAAe,IAA3F,UACI,eAAC,IAAD,CAAMhD,GAAG,IAAID,UAAU,gBAAvB,UACI,cAAC,IAAD,IADJ,iBAIA,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,2BAAvB,UACI,cAAC,IAAD,IADJ,UAIA,qBAAKA,UAAU,qBAAf,SACI,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,gCACI,cAAC,IAAD,IADJ,gBAOR,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,SACKyC,EACD,gCACI,cAAC,IAAD,IACCA,EAAKrD,YAGV,gCACI,cAAC,IAAD,IADJ,oBAShB,sBAAKW,UAAU,6BAAf,UACI,cAAC,IAAD,IACA,uBAAOA,UAAU,UAAUqC,MAAOc,EAAYhB,SApE5B,SAAAT,GAE1B,GADA0B,EAAc1B,EAAEU,OAAOC,OACA,KAAnBX,EAAEU,OAAOC,MAAc,CACvBU,GAAe,GACf,IAAIQ,EAAa,GACjBd,EAAUe,SAAQ,SAAAZ,GAClB,IAAGA,EAAK7D,MAAM0E,cAAcC,SAAShC,EAAEU,OAAOC,MAAMoB,eAGhD,OAAO,KAFPF,EAAWI,KAAKf,MAKpBU,EAAcC,QAGdR,GAAe,GACfO,EAAc,KAoDqEpB,KAAK,SACpF,0BAASlC,UAAU,wBAAwBI,MAAO4C,EAAc,GAAK,CAACxC,QAAQ,QAA9E,UACI,uCACC6C,EAAW9B,OAAS,EAErB,8BAtDC,SAACqC,GACd,IAAIC,EAAW,GAMf,OALAD,EAAMJ,SAAQ,SAAAM,GACNF,EAAMG,QAAQD,GAAQ,GACtBD,EAASF,KAAKG,MAGfD,EAgDUG,CAASX,GAAYV,KAAI,SAAAC,GAAI,OACtB,cAAC,IAAD,CAAM3C,GAAE,gBAAW2C,EAAKC,KAAxB,SACJ,yBAAQ7C,UAAU,yBACVE,QAAS,kBAAM6C,GAAe,IAE9B3C,MAAO,CAAC6D,MAAM,QAHtB,UAIQ,sBAAMjE,UAAU,UAAUI,MAAO,CAAC6D,MAAM,SAAxC,SACCrB,EAAK7D,QAEN,uBAPR,gBAO2B6D,EAAKF,eAMxC,oBAAItC,MAAO,CAAC6D,MAAM,QAASjE,UAAU,gBAArC,sC,eCyELkE,EArKM,SAAC,GAA2C,IAA1C9E,EAAyC,EAAzCA,WAAYH,EAA6B,EAA7BA,WAAYkF,EAAiB,EAAjBA,aAC3C,EAAwC3E,mBAAS,IAAjD,mBAAO4E,EAAP,KAAqBC,EAArB,KACA,EAA8B7E,mBAAS,CAACT,MAAM,GAAGC,KAAK,KAAtD,mBAAO0B,EAAP,KAAgBM,EAAhB,KACA,EAA8BxB,mBAAS,CAAC8E,SAAS,EAAGC,OAAO,IAA3D,mBAAOpF,EAAP,KAAgBqF,EAAhB,KACA,EAAiCC,cAAzBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,aAChB,EAA8BnF,mBAASmF,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCrF,mBAAS,KAA7C,mBAAOyB,EAAP,KAAmBC,EAAnB,KACA4D,qBAAU,WACNC,IAAMC,IAAN,qBAAwBN,IACnBO,MAAK,SAAAC,GACF,IAAMC,EAAiB,CACnBpG,MAAMmG,EAAIE,KAAKrG,MACfC,KAAKkG,EAAIE,KAAKpG,KACdE,GAAGgG,EAAIE,KAAKvC,IACZxD,SAAS6F,EAAIE,KAAK1C,MAEtB8B,EAAW,CAACF,SAASY,EAAIE,KAAKzE,MAAO4D,OAAOW,EAAIE,KAAKzE,QACrD0D,EAAgBc,GAChBnE,EAAW,CAACjC,MAAMmG,EAAIE,KAAKrG,MAAOC,KAAKkG,EAAIE,KAAKpG,YAEzD,CAAC0F,IACJ,IAyCMrD,EAAuB,WACzB,MAAsB,KAAlBX,EAAQ3B,MACD,EAAC,EAAO,gCAEE,KAAjB2B,EAAQ1B,KACD,EAAC,EAAO,+BAEf0B,EAAQ3B,MAAMuC,MAAM,IAAIC,OAAS,IAC1B,EAAC,EAAO,wCAEfb,EAAQ1B,KAAKsC,MAAM,IAAIC,OAAS,IACzB,EAAC,EAAO,uCAEfb,EAAQ3B,QAAUqF,EAAarF,OAAS2B,EAAQ1B,OAASoF,EAAapF,KAC/D,EAAC,EAAO,+CAEP,EAAC,EAAM,KAEnB,OACA,sBAAMgB,UAAU,yCAAhB,SACKoE,EAAarF,MAAQ6F,EACtB,sBAAM5E,UAAU,oBAAhB,UACA,uBAAMA,UAAU,mEAAmEI,MAAO,CAACiF,cAAc,UAAzG,UACI,uBAAOlD,SAAU,SAAAT,GAAC,OAAKV,GAAW,SAAAJ,GAAS,kCAASA,GAAT,IAAoB7B,MAAM2C,EAAEU,OAAOC,YAAWA,MAAO3B,EAAQ3B,MAAQuD,YAAa8B,EAAarF,MAAOiB,UAAU,4BAC3J,0BAAWmC,SAAU,SAAAT,GAAC,OAAKV,GAAW,SAAAJ,GAAS,kCAASA,GAAT,IAAoB5B,KAAK0C,EAAEU,OAAOC,YAAWA,MAAO3B,EAAQ1B,KAAMuD,KAAK,IAAID,YAAa8B,EAAapF,KAAMgB,UAAU,sBACpK,sCAASiB,EAAT,UAEJ,qBAAKjB,UAAU,eAAf,SACQ,8BACI,qBAAII,MAAO,CAACoB,OAAO,QAAS8D,UAAU,cAAetF,UAAU,yFAA/D,UACI,6BACI,cAAC,IAAD,CAAME,QA1DT,WACrB,GAAImB,IAAuB,GAAI,CAC3BwD,GAAW,GACX,IAAMU,EAAc,CAChBxG,MAAM2B,EAAQ3B,MACdC,KAAK0B,EAAQ1B,KACb2B,MAAMxB,EAAQoF,QAElBQ,IAAMS,IAAN,qBAAwBpB,EAAalF,IAAMqG,GACtCN,MAAK,SAAAC,GACF,IAAMC,EAAiB,CACnBpG,MAAMmG,EAAIE,KAAKrG,MACfC,KAAKkG,EAAIE,KAAKpG,KACdE,GAAGgG,EAAIE,KAAKvC,IACZH,KAAKwC,EAAIE,KAAK1C,MAElB8B,EAAW,CAACF,SAASY,EAAIE,KAAKzE,MAAO4D,OAAOW,EAAIE,KAAKzE,QACrD0D,EAAgBc,MAExBJ,IAAMC,IAAI,cACLC,MAAK,SAAAC,GACNf,EAAae,EAAIE,KAAKK,eAG1BvE,EAAcG,IAAuB,KAkCgBpB,GAAE,gBAAWmE,EAAalF,IAA3D,SACI,iCACI,cAAC,IAAD,UAIZ,6BACA,cAAC,IAAD,CAAMgB,QAAS,kBAAM2E,GAAW,IAAQ5E,GAAE,gBAAWmE,EAAalF,IAAlE,SACO,iCACC,cAAC,IAAD,oBASxB,sBAAMc,UAAU,oBAAhB,UACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BoE,EAAarF,QACzC,qBAAIiB,UAAU,gCAAd,qBAAuDoE,EAAa/E,SAApE,OACA,mBAAGW,UAAU,YAAb,SAA0BoE,EAAapF,UAE3C,qBAAKgB,UAAU,eAAf,SACQ,8BACI,qBAAIA,UAAU,sBAAd,UACI,6BACI,wBAAQA,UAAU,OAAlB,SACI,cAAC,IAAD,QAGR,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,wBAAQC,QA/FvB,WACjBjB,EAAWmF,EAAalF,KA8FwCc,UAAU,SAA1C,SACI,cAAC,IAAD,UAIZ,6BACI,qBAAKE,QAAS,kBAAM2E,GAAW,IAA/B,SACI,wBAAQ7E,UAAU,OAAlB,SACI,cAAC,IAAD,UAIZ,6BACI,8BACI,wBACAS,aAzHZ,WACpB,GAAItB,EAAQoF,SAAWpF,EAAQmF,SAAW,CACtC,IAAM5D,EAAU,CACZ3B,MAAMqF,EAAarF,MACnBC,KAAKoF,EAAapF,KAClB2B,MAAMxB,EAAQoF,QAElBnF,EAAWgF,EAAalF,GAAIwB,GAC5B8D,GAAW,SAAA5D,GAAS,kCAASA,GAAT,IAAoB0D,SAASnF,EAAQoF,cAkH7BrE,QAAS,kBAAMsE,GAAW,SAAA5D,GAAS,kCAASA,GAAT,IAAoB2D,OAAO3D,EAAU2D,OAAS,QACjFvE,UAAU,oBAHV,SAII,cAAC,IAAD,UAIZ,6BACI,8BACI,wBAAOA,UAAU,gBAAjB,UACCb,EAAQoF,OADT,IACiB,cAAC,IAAD,qBAQ3C,mBC/ICmB,EApBD,SAAC,GAAY,IAAX3E,EAAU,EAAVA,MACL4E,EAAqB5E,EAArB4E,KAAMC,EAAe7E,EAAf6E,YACb,OACQ,cAAC,IAAD,CAAM3F,GAAE,iBAAY0F,GAApB,SACJ,uBAAO3F,UAAU,QAAjB,UACQ,mCAAM2F,EAAN,OACA,kCAAKC,EAAL,aCkCDC,EAxCG,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,WACzC,EAAkCxG,mBAAS,uBAA3C,mBAAOyG,EAAP,KAAkBC,EAAlB,KACA,EAAgC1G,mBAAS,CAACmG,KAAK,GAAIC,YAAY,KAA/D,mBAAOO,EAAP,KAAiBC,EAAjB,KAQAtB,qBAAU,WACN,IAAMuB,EAAY,CAAC,8BAA+B,8BAClD,iCAAkC,6BAA8B,sBAChEH,EAAaG,EAAUC,KAAKC,MAAMD,KAAKE,SAAWH,EAAU9E,YAC7D,IAQH,OACI,sBAAMrB,QANe,SAAAwB,GACS,mBAA1BA,EAAEU,OAAOqE,UAAU,IACnBV,GAAa,IAIgB3F,MAAO0F,EAAY,GAAK,CAACtF,QAAQ,QAASR,UAAU,iBAArF,SACI,uBAAOyB,SApBW,SAAAC,GACtBA,EAAEC,iBACFqE,EAAWG,IAkB6B/F,MAAO,CAAC2B,OAAO,UAAW/B,UAAU,YAAxE,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,kBACA,uBAAOsC,YAAY,OAAOD,MAAO8D,EAASR,KAAMxD,SAnBvC,SAAAT,GAAK0E,GAAY,SAAAxF,GAAS,kCAASA,GAAT,IAAoB+E,KAAKjE,EAAEU,OAAOC,YAmBOH,KAAK,OAAOlC,UAAU,oBAEtG,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,yBACA,0BAAUsC,YAAY,cAAcD,MAAO8D,EAASP,YAAazD,SAtBjD,SAAAT,GAAK0E,GAAY,SAAAxF,GAAS,kCAASA,GAAT,IAAoBgF,YAAYlE,EAAEU,OAAOC,YAsBiBrC,UAAU,eAAeuC,KAAK,SAEtI,wBAAQL,KAAK,SAASlC,UAAU,eAAhC,oBACA,wBAAOI,MAAO,CAAC2B,OAAO,OAAQC,WAAW,QAAzC,oBAA0DiE,WCuB3DS,EArDA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQX,EAAgB,EAAhBA,WACtB,EAA0CxG,mBAAS,IAAnD,mBAAOoH,EAAP,KAAsBC,EAAtB,KACA,EAAsCrH,mBAASmH,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCvH,oBAAS,GAA3C,mBAAOsG,EAAP,KAAkBC,EAAlB,KACAjB,qBAAU,WACNiC,EAAeJ,KAChB,CAACA,IAkBJ,OACI,iCACI,cAAC,EAAD,CAAWX,WAAYA,EAAYF,UAAWA,EAAWC,aAAcA,IACvE,wBAAQ7F,QAAS,kBAAM6F,GAAa,SAAAnF,GAAS,OAAKA,MAAYZ,UAAW8F,EAAY,0CAA2C,yCAAhI,SACKA,EAAY,SAAW,iBAE5B,oBAAI1F,MAAO,CAAC4G,UAAU,UAAtB,iCACI,sBAAKhH,UAAU,yEAAf,UACI,cAAC,IAAD,IACA,uBAAOmC,SAzBI,SAAAT,GAEvB,GADAmF,EAAiBnF,EAAEU,OAAOC,OACH,KAAnBX,EAAEU,OAAOC,MAAc,CACvB,IAAIkB,EAAa,GACjBoD,EAAOnD,SAAQ,SAAAzC,GACRA,EAAM4E,KAAKlC,cAAcC,SAAShC,EAAEU,OAAOC,MAAMoB,gBAChDF,EAAWI,KAAK5C,MAGxBgG,EAAexD,QAGfwD,EAAeJ,IAa8BtE,MAAOuE,EAAetE,YAAY,eAAeJ,KAAK,YAEnG,qBAAIlC,UAAU,YAAYI,MAAO,CAAC4G,UAAU,UAA5C,wBAA4DF,EAAYvF,OAAxE,YAAyG,IAAvBuF,EAAYvF,OAAe,SAAW,SAAxH,OAEA,oBAAIvB,UAAU,kBAAd,SACK8G,EAAYnE,KAAI,SAAA5B,GACb,OACI,8BACG,cAAC,EAAD,CAAwBA,MAAOA,GAAnBA,EAAM4E,OADX5E,EAAM4E,eCCzBsB,EA3CG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,cAAexE,EAAS,EAATA,KAG/B,EAAgClD,mBAAS,CAACH,SAAS,GAAI8H,SAAS,KAAhE,mBAAOC,EAAP,KAAiBC,EAAjB,KA+BMC,EAAe,SAAA5F,GACjBA,EAAEC,iBACuB,KAAtByF,EAAS/H,UAAyC,KAAtB+H,EAASD,UACpCD,EAAcE,IAGtB,OAAO1E,EAAO,cAAC,IAAD,CAAUzC,GAAG,UAhCnB,uBAAMwB,SAAU6F,EAAetH,UAAU,YAAzC,UACI,wCACA,sBAAKA,UAAU,OAAf,UACI,uBAAQA,UAAU,aAAlB,sBACA,uBACAmC,SAAU,SAAAT,GAAC,OAAI2F,GAAY,SAAAzG,GAAS,kCAASA,GAAT,IAAoBvB,SAASqC,EAAEU,OAAOC,YAC1EA,MAAO+E,EAAS/H,SAChB6C,KAAK,OAAOlC,UAAU,oBAG1B,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,uBACAmC,SAAU,SAAAT,GAAC,OAAI2F,GAAY,SAAAzG,GAAS,kCAASA,GAAT,IAAoBuG,SAASzF,EAAEU,OAAOC,YAC1EA,MAAO+E,EAASD,SACfjF,KAAK,WAAWlC,UAAU,eAAed,GAAG,6BAGjD,wBAAQgD,KAAK,SAAS9B,MAAO,CAACmH,YAAY,QAASvH,UAAU,mBAA7D,oBACA,cAAC,IAAD,CAAMC,GAAG,YAAT,+CCSDuH,EArCM,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,iBAGnB,GAH8C,EAAT/E,KAGLlD,mBAAS,CAACH,SAAS,GAAI8H,SAAS,MAAhE,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OACI,uBAAM5F,SARW,SAAAC,GACjBA,EAAEC,iBACuB,KAAtByF,EAAS/H,UAAyC,KAAtB+H,EAASD,UACpCM,EAAiBL,IAKSpH,UAAU,YAAxC,UACI,0CACA,sBAAKA,UAAU,OAAf,UACI,uBAAQA,UAAU,aAAlB,sBACA,uBACAmC,SAAU,SAAAT,GAAC,OAAI2F,GAAY,SAAAzG,GAAS,kCAASA,GAAT,IAAoBvB,SAASqC,EAAEU,OAAOC,YAC1EA,MAAO+E,EAAS/H,SAChB6C,KAAK,OAAOlC,UAAU,oBAE1B,sBAAKA,UAAU,OAAf,UACI,uBAASA,UAAU,aAAnB,sBACA,uBACAmC,SAAU,SAAAT,GAAC,OAAI2F,GAAY,SAAAzG,GAAS,kCAASA,GAAT,IAAoBuG,SAASzF,EAAEU,OAAOC,YAC1EA,MAAO+E,EAASD,SAChBjF,KAAK,WAAWlC,UAAU,eAAed,GAAG,6BAGhD,wBAAQgD,KAAK,SAAS9B,MAAO,CAACmH,YAAY,QAASvH,UAAU,kBAA7D,sBACA,cAAC,IAAD,CAAMC,GAAG,SAAT,6CCLGyH,EAzBO,SAACC,GACnB,IAAQ5G,EAAU0D,cAAV1D,MACR,EAA0CvB,mBAAS,CAACmG,KAAK,GAAIC,YAAY,GAAIgC,MAAM,KAAnF,mBAAOC,EAAP,KAAsBC,EAAtB,KACAhD,qBAAU,WACNC,IAAMC,IAAN,sBAAyBjE,IACpBkE,MAAK,SAAAC,GACFA,EAAIE,KAAKO,KACPmC,EAAiB5C,EAAIE,MACpB,SAEZ,CAACrE,IACJgH,QAAQC,IAAIH,GACZ,IAAOlC,EAA4BkC,EAA5BlC,KAAMC,EAAsBiC,EAAtBjC,YAAagC,EAASC,EAATD,MAC1B,OACI,uBAAM5H,UAAU,gBAAhB,UACI,mCAAM2F,EAAN,OACA,kCAAKC,EAAL,OACA,6BACKgC,EAAMjF,KAAI,SAAAD,GAAI,OAAI,6CAEvB,2CCHGuF,EArBC,SAAC,GAA2B,IAA1BvF,EAAyB,EAAzBA,KAAMwF,EAAmB,EAAnBA,eAcpB,OACI,+BACKxF,EAZD,sBAAKtC,MAAO,CAAC6B,MAAM,OAAQF,OAAO,UAAW/B,UAAU,iBAAvD,UACI,6BAAK0C,EAAKrD,WACV,wBAAQa,QAASgI,EAAjB,sBACA,6CAS6B,cAAC,IAAD,CAAUjI,GAAG,cCwN3CkI,EAlNH,WACV,MAA4B3I,mBAAS,IAArC,mBAAOmH,EAAP,KAAeyB,EAAf,KACA,EAAkC5I,mBAAS,IAA3C,mBAAOiD,EAAP,KAAkB0B,EAAlB,KACA,EAAwB3E,mBAAS,MAAjC,mBAAOkD,EAAP,KAAa2F,EAAb,KACA,EAAoC7I,oBAAS,GAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KACA4B,qBAAW,WACTC,IAAMC,IAAI,cACPC,MAAK,SAAAC,GACJf,EAAae,EAAIE,KAAKK,UAE1BV,IAAMC,IAAI,eACPC,MAAK,SAAAC,GACJkD,EAAUlD,EAAIE,KAAKuB,WAEvB5B,IAAMC,IAAI,aACPC,MAAK,SAAAC,GACJ,IAAIA,EAAIE,KAAK/F,SAGX,OAAO,KAFPgJ,EAAQnD,EAAIE,WAKjB,IAEH,IAAMtE,EAAU,SAAC8B,GACfmC,IAAMnC,KAAK,aAAcA,GACtBqC,MAAK,SAAAC,GAAQf,GAAa,SAAAvD,GAAS,OAAKsE,EAAIE,MAAT,mBAAkBxE,WAGpD3B,EAAa,SAACC,GAClB,IAAIoJ,EAAc,GAClBvD,IAAMwD,OAAN,qBAA2BrJ,IACxB+F,MAAK,SAAAC,GACJzC,EAAUe,SAAQ,SAAAZ,GAAI,OAAIA,EAAKC,MAAQ3D,EAAK,KAAOoJ,EAAY3E,KAAKf,MACpEuB,EAAamE,OAIblJ,EAAa,SAACF,EAAIwB,GACtBqE,IAAMS,IAAN,qBAAwBtG,GAAMwB,GAC3BuE,MAAK,SAAAC,GAAG,OAAIf,GAAa,SAAAvD,GAAS,OAAIA,EAAU+B,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAQ3D,EAAK0D,EAAOsC,EAAIE,eAuC9F,EAAsC5F,oBAAS,GAA/C,mBAAOwD,EAAP,KAAoBD,EAApB,KAkBA,OACE,cAAC,IAAD,UACA,sBAAK7C,QAnBa,SAAAwB,GACY,YAA1BA,EAAEU,OAAOqE,UAAU,IACrB1D,GAAe,IAiBU/C,UAAU,OAArC,UACE,sBAAKA,UAAU,sBAAf,UACE,wBAAQE,QAASsI,OAAOA,OAAS,IAAM,GAAK,WANhDtF,GAAc,SAAA/C,GAAI,OAAKA,MAMnB,SACG8C,EAAa,cAAC,IAAD,IAAY,cAAC,IAAD,MAE5B,yBAAQjD,UAAU,gBAAlB,UACE,cAAC,IAAD,IADF,oBAKF,cAAC,EAAD,CACAkD,cAAeA,EACfD,WAAYA,EACZR,UAAWA,EACXC,KAAMA,EACNK,eAAgBA,EAChBC,YAAaA,IAEb,oBAAIhD,UAAU,SACd,eAAC,IAAD,WACA,cAAC,IAAD,CAAOyI,KAAK,8BAAZ,SACI,cAAC,EAAD,CACE3H,QAASA,EACT7B,WAAYA,EACZG,WAAYA,EACZ+E,aAAcA,MAGpB,cAAC,IAAD,CAAOsE,KAAK,gBAAZ,SACI,cAAC,EAAD,CACE/F,KAAMA,EACN5B,QAASA,EACTqD,aAAcA,EACdlF,WAAYA,EACZG,WAAYA,MAGlB,cAAC,IAAD,CAAOqJ,KAAK,UAAZ,SACE,cAAC,EAAD,CAAQ9B,OAAQA,EAAQX,WAnDX,SAAA0C,GACjB3D,IAAMnC,KAAK,cAAe8F,GACvBzD,MAAK,SAAAC,GACDA,EAAIE,KAAK,GAAIgD,GAAU,SAAAjI,GAAI,4BAAQA,GAAR,CAAc+E,EAAIE,KAAK,QAChDuD,MAAM,mCAiDb,cAAC,IAAD,CAAOF,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,CACAP,eA3EiB,WACrBnD,IAAMC,IAAI,eACPC,MAAK,SAAAC,GAAG,OAAImD,EAAQ,UA0EnB3F,KAAMA,MAGR,cAAC,IAAD,CAAO+F,KAAK,SAAZ,SACA,cAAC,EAAD,CACEvB,cAzGgB,SAACxE,GACnBqC,IAAMnC,KAAK,YAAaF,GACrBuC,MAAK,SAAAC,GACJ,kBAAsBA,EAAIE,KAA1B,GAAOzF,EAAP,KAAc+C,EAAd,KACOrD,EAAwCqD,EAAxCrD,SAAUwD,EAA8BH,EAA9BG,IAAK+F,EAAyBlG,EAAzBkG,UAAWC,EAAcnG,EAAdmG,WAMjClJ,EACI0I,EAAQ,CAAChJ,WAAUH,GAAG2D,EAAK+F,YAAWC,gBAJxCF,MAAM,eACNN,EAAQ,WAkGZ3F,KAAMA,MAGR,cAAC,IAAD,CAAO+F,KAAK,YAAZ,SACA,cAAC,EAAD,CACAhB,iBAhGqB,SAAC/E,GACF,KAAlBA,EAAKrD,UAAqC,KAAlBqD,EAAKyE,UAC/BpC,IAAMnC,KAAK,eAAgBF,GACxBuC,MAAK,SAAAC,GACJyD,MAAMzD,EAAIE,KAAK,QA6FnB1C,KAAMA,MAGN,cAAC,IAAD,CAAO+F,KAAK,QAAZ,SACA,cAAC,EAAD,CACI/F,KAAMA,EACND,UAAWA,EACX3B,QAASA,EACT7B,WAAYA,EACZG,WAAYA,EACZG,SA7FS,SAAAmF,GACfK,IAAMS,IAAN,qBAAwB9C,EAAOA,EAAKxD,GAAK,QAAU,CAACwF,SAAQmE,WAAWnG,EAAKmG,aACzE5D,MAAK,SAAAC,GAAG,OAAI6C,QAAQC,IAAI9C,WA8FzB,cAAC,IAAD,CAAOuD,KAAK,YAAZ,SACG,WACC,OAAO,oBAAIrI,MAAO,CAAC4G,UAAU,UAAtB,mCAGX,cAAC,IAAD,CAAOyB,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUxI,GAAG,qBC3LN6I,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34111b25.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({title, text, deletePost, id,  coffees, updatePost, username, sessionUsername, savePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(false)\r\n    //Handlers\r\n\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        if (coffees !== coffeesState.counter) {\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter\r\n            }\r\n            updatePost(id, newPost)\r\n        }\r\n    }\r\n\r\n    const handleSavePost = () =>{\r\n        savePost(id)\r\n    }\r\n    return(\r\n            <div  className=\"card post \">\r\n                <Link to={`post/${id}`} className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - {username}</h6>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() => setOptions(prev => (!prev))}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={handleSavePost} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {saveState\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onMouseLeave={handleAddCoffee} \r\n                    onClick={() => setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Dropdown } from 'react-bootstrap'\r\nconst PostForm = ({addPost, username}) =>{\r\n    //States\r\n    const [newPost, setNewPost] = useState({title:'', text:'', forum:''})\r\n    const [errorState, setErrorState] = useState('')  \r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(username){\r\n            if (lengthEnsureFunction()[0]) {\r\n                addPost({title:newPost.title, text:newPost.text, username})\r\n                setNewPost({title:'', text:''})\r\n                setIsOpen(false)\r\n                setErrorState(lengthEnsureFunction()[1])\r\n            }else{\r\n                setErrorState(lengthEnsureFunction()[1])\r\n            }\r\n        }\r\n        if(!username){\r\n            setErrorState('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        setIsOpen(prevState => !prevState)\r\n    }\r\nreturn(\r\n    <form style={isOpen ? {} : {height:'45px'}} onSubmit={handleSubmit} className='p-2 overflow-hidden w-75 mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={isOpen\r\n            ?'closeForm d-flex align-items-center justify-content-center' \r\n            :'openForm d-flex align-items-center justify-content-center'\r\n            }\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        <small style={{userSelect:'none'}} className='mx-3'> {errorState} </small>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Post'\r\nimport PostForm from './components/PostForm'\r\n\r\nconst Home = ( {postsList, addPost, deletePost, updatePost, user, savePost} ) =>{\r\n  return(\r\n\r\n      <main className='d-flex flex-row justify-content-center'>\r\n        <section className='mainSection'>\r\n          <div className='d-flex justify-content-center w-100'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            username={user ? user.username : false} \r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              savePost={savePost}\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              username={post.user}\r\n              coffees={post.likes}\r\n              sessionUsername={user ? user.username : ''}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = ({postsList, user, setDisplayShow, displayShow, navBarOpen,setNavBarOpen}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                foundsList.push(post)\r\n            }else{\r\n                return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    const putLimit = (array) =>{\r\n        let newArray = []\r\n        array.forEach(item =>{\r\n            if (array.indexOf(item) < 3) {\r\n                newArray.push(item)\r\n            }\r\n        })\r\n        return newArray;\r\n    } \r\n    return(\r\n        <nav onClick={() => setNavBarOpen(false)} className={`navBar ${navBarOpen ? 'navBarOpen' : ''}`}>\r\n            <Link to='/' className='gap-2 navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n            <Link to='/' className='gap-2 navText navHomeBtn'>\r\n                <Icon.HouseFill/>\r\n                Home\r\n            </Link>   \r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <Link to='/Profile'>\r\n                            {user ?\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                {user.username}\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                LogIn\r\n                            </div>}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=' navItem navSearch navItem'>\r\n                <Icon.Search/>\r\n                <input className='navItem' value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section className='navItem searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h5>Posts</h5>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {putLimit(foundPosts).map(post=>(\r\n                                <Link to={`/post/${post._id}`} >\r\n                            <button className='navItem navBarFounded ' \r\n                                    onClick={() => setDisplayShow(false)} \r\n                                    \r\n                                    style={{color:'grey'}}> \r\n                                    <span className='navItem' style={{color:'white'}}>\r\n                                    {post.title}\r\n                                    </span>\r\n                                    <br/> Bard-main / {post.user} \r\n                            </button>\r\n                                </Link>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className=' navItem mt-2'>Nothing Found!</h6>}\r\n\r\n                </section>\r\n                \r\n            </div>       \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","import { Link, useParams} from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList}) =>{\r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const { postId, editingParam } = useParams() \r\n    const [editing, setEditing] = useState(editingParam)   \r\n    const [errorState, setErrorState] = useState(' ')\r\n    useEffect(() =>{\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id,\r\n                    username:res.data.user\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n            })\r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id,\r\n                        user:res.data.user\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-row justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\"card selectedPost\">\r\n            <form className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 input form-control\"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"6\" placeholder={selectedPost.text} className=\"w-75 form-control\"></textarea>\r\n                <small> {errorState} </small>\r\n            </form>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'300px', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - {selectedPost.username} </h6>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","import { Link } from 'react-router-dom';\r\n\r\nconst Forum = ({forum}) =>{\r\n    const {name, description} = forum\r\n    return (\r\n            <Link to={`/Forum/${name}`} >\r\n        <main  className='forum'>\r\n                <h2> {name} </h2>\r\n                <p> {description} </p>\r\n            {/* <button>\r\n                Join\r\n                <Icon.PlusLg/>\r\n                </button>\r\n                <button>\r\n                Delete\r\n                <Icon.X/>\r\n            </button> */}\r\n        </main>\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default Forum;","import { useEffect, useState } from \"react\"\r\n\r\nconst ForumForm = ({showModal, setShowModal, createForm}) =>{\r\n    const [randomMsg, setRandomMsg] = useState('Create a new forum!')\r\n    const [newForum, setNewForum] = useState({name:'', description:''})\r\n\r\n    const handleCreateForum = e =>{\r\n        e.preventDefault();\r\n        createForm(newForum)\r\n    }\r\n    const handleNameChange = e =>{setNewForum(prevState => ({...prevState, name:e.target.value}))}\r\n    const handleDescriptionChange = e =>{setNewForum(prevState => ({...prevState, description:e.target.value}))}\r\n    useEffect(() =>{\r\n        const msgOption = ['the new most visited forum!', 'a place to talk and debate!',\r\n        'a option for find new friends!', 'the best coffeposts forum!', 'a brand new forum!']\r\n        setRandomMsg(msgOption[Math.floor(Math.random() * msgOption.length)])\r\n    }, [])\r\n\r\n\r\n    const handLeModalClick = e =>{\r\n        if (e.target.classList[0] === 'forumFormModal') {\r\n            setShowModal(false)\r\n        }\r\n    }\r\n    return(\r\n        <main onClick={handLeModalClick} style={showModal ? {} : {display:'none'}} className='forumFormModal'>\r\n            <form  onSubmit={handleCreateForum} style={{margin:'0 auto'}} className='forumForm'>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input placeholder='Name' value={newForum.name} onChange={handleNameChange} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Description</label>\r\n                    <textarea placeholder='Description' value={newForum.description} onChange={handleDescriptionChange} className=\"form-control\" rows='4'/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-main\">Create</button>\r\n                <small style={{margin:'20px', userSelect:'none'}}>Create {randomMsg}</small>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ForumForm;","import * as Icon from 'react-bootstrap-icons'\r\nimport { useEffect, useState } from 'react';\r\n//Components\r\nimport Forum from './Forum'\r\nimport ForumForm from './ForumForm';\r\n\r\nconst Forums = ({ forums, createForm }) =>{\r\n    const [searchedForum, setSearchedForum] = useState('')\r\n    const [foundForums, setFoundForums] = useState(forums)\r\n    const [showModal, setShowModal] = useState(false)\r\n    useEffect(()=>{\r\n        setFoundForums(forums)\r\n    }, [forums])\r\n\r\n    const handleSearchChange = e =>{\r\n        setSearchedForum(e.target.value)\r\n        if (e.target.value !== '') {\r\n            let foundsList = [];\r\n            forums.forEach(forum => {\r\n                if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                    foundsList.push(forum)\r\n                }\r\n            });\r\n            setFoundForums(foundsList)\r\n        }\r\n        else{\r\n            setFoundForums(forums)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main > \r\n            <ForumForm createForm={createForm} showModal={showModal} setShowModal={setShowModal} />\r\n            <button onClick={() => setShowModal(prevState => !prevState)} className={showModal ? 'btn btn-danger mt-1 mx-2 position-fixed' :'btn btn-forum mt-1 mx-2 position-fixed'}>\r\n                {showModal ? 'Cancel' : 'Create Forum'}\r\n            </button>\r\n            <h2 style={{textAlign:'center'}}> Search for Forums </h2>\r\n                <div className='forumSearchBar  d-flex align-items-center justify-content-center gap-2'>\r\n                    <Icon.Search/>\r\n                    <input onChange={handleSearchChange} value={searchedForum} placeholder='Just type...' type='text'></input>\r\n                </div>\r\n            <h4 className='mt-3 mb-2' style={{textAlign:'center'}}> {`${foundForums.length} ${foundForums.length !== 1 ? 'Forums' : 'Forum'}`} </h4>\r\n            {/* <ForumForm /> */}\r\n            <ul className='forumsContainer'>\r\n                {foundForums.map(forum =>{\r\n                    return (\r\n                        <div key={forum.name}>\r\n                           <Forum key={forum.name} forum={forum} />\r\n                        </div>\r\n                    \r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Forums;","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LogInForm = ({logInFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Renders\r\n    const renderLogInForm = () =>{\r\n        return(\r\n            <form onSubmit={handleSubmit}  className='logInForm'>\r\n                <h3>Log In</h3>\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                    value={formUser.username} \r\n                    type=\"text\" className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))}\r\n                    value={formUser.password} \r\n                     type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                     />\r\n                </div>\r\n                <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary \">Log In</button>\r\n                <Link to='/Register'>You don´t have an account?</Link>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            logInFunction(formUser)\r\n        }\r\n    }\r\n    return user ? <Redirect to='/Home'/> : renderLogInForm();\r\n}\r\n\r\nexport default LogInForm;\r\n","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({registerFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            registerFunction(formUser)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className='logInForm'>\r\n            <h3>Register</h3>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Username</label>\r\n                <input\r\n                onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                value={formUser.username} \r\n                type=\"text\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label   className=\"form-label\">Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))} \r\n                value={formUser.password} \r\n                type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary\">Register</button>\r\n            <Link to='/LogIn'>You alredy have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst SelectedForum = (props) =>{\r\n    const { forum } = useParams();\r\n    const [selectedForum, setSelectedForum] = useState({name:'', description:'', users:[]})\r\n    useEffect(() =>{\r\n        axios.get(`/api/forums/${forum}`)\r\n            .then(res =>{\r\n                res.data.name\r\n                ? setSelectedForum(res.data)\r\n                : <Redirect to='/Home' />\r\n            })\r\n    }, [forum])\r\n    console.log(selectedForum)\r\n    const {name, description, users} = selectedForum\r\n    return(\r\n        <main className='selectedForum'>\r\n            <h2> {name} </h2>\r\n            <p> {description} </p>\r\n            <ul>\r\n                {users.map(user => <h3> user </h3>)}\r\n            </ul>\r\n            <h3>Posts</h3>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedForum;","import { Redirect } from 'react-router';\r\nconst Profile = ({user, logOutFunction}) =>{\r\n\r\n    const renderProfileSection = () =>{\r\n        return (\r\n            <div style={{width:'50vw', margin:'0 auto'}} className='profileSection'>\r\n                <h2>{user.username}</h2>\r\n                <button onClick={logOutFunction} > Log Out</button>\r\n                <ul>\r\n                    PostList\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            {user ? renderProfileSection() : <Redirect to='/LogIn' />}\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport * as Icon from 'react-bootstrap-icons';\n//Components =>\nimport Home from './Home'\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\nimport Forums from './components/Forums'\nimport LogInForm from './components/LogInForm'\nimport RegisterForm from './components/RegisterForm'\nimport SelectedForum from './components/SelectedForum';\n//Components <=\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Profile from './components/Profile';\n//ROutes <=\nconst App = () => {\n  const [forums, setForums] = useState([])\n  const [postsList, setPostsList] = useState([])\n  const [user, setUser] = useState(null)\n  const [navBarOpen, setNavBarOpen] = useState(false)\n  useEffect( () =>{\n    axios.get('/api/posts')\n      .then(res =>{\n        setPostsList(res.data.posts)\n      })\n    axios.get('/api/forums')\n      .then(res => {\n        setForums(res.data.forums)\n      })\n    axios.get('/api/user')\n      .then(res =>{\n        if (res.data.username) {\n          setUser(res.data)\n        }else{\n          return null;\n        }\n      })\n  }, [])\n\n  const addPost = (post) =>{\n    axios.post('/api/posts', post)\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\n  };\n\n  const deletePost = (id) =>{\n    let newPostList = []\n    axios.delete(`/api/posts/${id}`)\n      .then(res =>{\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\n        setPostsList(newPostList);\n      });\n  }\n\n  const updatePost = (id, newPost) =>{\n    axios.put(`/api/posts/${id}`, newPost)\n      .then(res => setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data)))\n  }\n\n\n  //User functions\n  const logInFunction = (user) =>{\n      axios.post('api/login', user)\n        .then(res => {\n          const [state, user] = res.data\n          const {username, _id, createdAt, savedPosts} = user\n          \n          const userWrongFunction = () =>{\n            alert('User Wrong!');\n            setUser(null);\n          }\n          state \n            ? setUser({username, id:_id, createdAt, savedPosts})\n            : userWrongFunction()\n        })\n  }  \n  const registerFunction = (user) =>{\n    if (user.username !== '' && user.password !== '') {\n      axios.post('api/register', user)\n        .then(res => {\n          alert(res.data[1]);\n        })\n      \n    }\n  }\n  const logOutFunction = () =>{\n    axios.get('/api/logout')\n      .then(res => setUser(null))\n  }\n  \n  const savePost = postId =>{\n    axios.put(`/api/users/${user ? user.id : 'none'}`, {postId, savedPosts:user.savedPosts})\n      .then(res => console.log(res))\n  }\n\n  const [displayShow, setDisplayShow] = useState(false)\n  const handleClick = e =>{\n    if (e.target.classList[0] !== 'navItem') {\n      setDisplayShow(false)\n    }\n  }\n\n  const createForm = newForm =>{\n    axios.post('/api/forums', newForm)\n      .then(res => {\n        if(res.data[0]) setForums(prev => [...prev, res.data[1]])\n        else alert('The forum alredy exist!')\n      })\n  }\n\n  const activeResponsive = () =>{\n    setNavBarOpen(prev => !prev)\n  }\n  return (\n    <Router>\n    <div onClick={handleClick} className='main'>\n      <div className='navBarResponsiveBtn'>\n        <button onClick={window.window < 600 ? {} : () =>{ activeResponsive() }}>\n          {navBarOpen ? <Icon.X/> : <Icon.List/>}\n        </button>\n        <button className='gap-2 navText' >\n          <Icon.CupFill/>\n          CoffeePosts\n        </button>\n      </div>\n      <NavBar\n      setNavBarOpen={setNavBarOpen}\n      navBarOpen={navBarOpen}\n      postsList={postsList}\n      user={user}\n      setDisplayShow={setDisplayShow}\n      displayShow={displayShow}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n      <Route path=\"/Post/:postId&:editingParam\">\n          <SelectedPost \n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            setPostsList={setPostsList}\n            />\n      </Route>\n      <Route path=\"/Post/:postId\">\n          <SelectedPost \n            user={user} \n            addPost={addPost}\n            setPostsList={setPostsList}\n            deletePost={deletePost} \n            updatePost={updatePost}\n          />\n      </Route>\n      <Route path=\"/Forums\">\n        <Forums forums={forums} createForm={createForm} />\n      </Route>\n      <Route path=\"/Forum/:forum\">\n        <SelectedForum/>\n      </Route>\n      <Route path=\"/Profile\">\n        <Profile\n        logOutFunction={logOutFunction}\n        user={user} \n        />\n      </Route>\n      <Route path=\"/LogIn\">\n      <LogInForm \n        logInFunction={logInFunction}\n        user={user}\n          />\n      </Route>\n      <Route path=\"/Register\">\n      <RegisterForm \n      registerFunction={registerFunction}\n      user={user}\n          />\n      </Route>\n      <Route path=\"/Home\">\n      <Home \n          user={user} \n          postsList={postsList}\n          addPost={addPost}\n          deletePost={deletePost} \n          updatePost={updatePost}\n          savePost={savePost}\n          />\n      </Route>\n      <Route path='/:noFound'>\n        {() =>{\n          return(<h3 style={{textAlign:'center'}}>404 Page Not Found</h3>)\n        }}\n      </Route>\n      <Route path=\"/\">\n        <Redirect to='/Home'/>\n      </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n/*\n <div className='main'>\n            \n      <NavBar\n      postsList={postsList} />\n\n    <main className='d-flex flex-row justify-content-center'>\n    <section className='mainSection'>\n        <div className='d-flex justify-content-center w-100'>\n          <PostForm\n          addPost={addPost} />\n        </div>\n        <div className='mt-3 postsContainer'>\n          {postsList.map(post =>(\n            <Post\n            key={post._id}\n            title={post.title}\n            text={post.text}\n            deletePost={deletePost}\n            id={post._id}\n            />\n          ))}\n        </div>\n      </section>\n    </main>\n    </div>\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}