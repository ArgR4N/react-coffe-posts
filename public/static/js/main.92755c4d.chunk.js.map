{"version":3,"sources":["components/Post.js","components/PostForm.js","Home.js","components/NavBar.js","SelectedPost.js","App.js","reportWebVitals.js","index.js"],"names":["Post","title","text","deletePost","id","coffees","updatePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","setSaveState","className","to","onClick","prevState","style","opacity","transition","visibility","onMouseLeave","newPost","likes","PostForm","addPost","setNewPost","errorState","setErrorState","isOpen","setIsOpen","lengthEnsureFunction","split","length","height","onSubmit","e","preventDefault","fontSize","marginBottom","cursor","margin","userSelect","width","type","onChange","target","value","placeholder","rows","Home","postsList","map","post","_id","NavBar","searchText","setSearchText","displayShow","setDisplayShow","foundPosts","setFoundPosts","foundsList","forEach","toLowerCase","includes","push","display","color","SelectedPost","setPostsList","selectedPost","setSelectedPost","original","actual","setCoffees","useParams","postId","editingParam","editing","setEditing","useEffect","axios","get","then","res","newSelectedPost","data","flexDirection","transform","updatedPost","put","posts","App","newPostList","delete","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92755c4d.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({title, text, deletePost, id,  coffees, updatePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(false)\r\n    \r\n    //Handlers\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        if (coffees !== coffeesState.counter) {\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter\r\n            }\r\n            updatePost(id, newPost)\r\n        }\r\n    }\r\n    return(\r\n            <div  className=\"card post \">\r\n                <Link to={`post/${id}`} className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - user</h6>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() =>{setOptions(prevState => !prevState)}}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={() => setSaveState(prevState => !prevState)} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {saveState\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onMouseLeave={handleAddCoffee} \r\n                    onClick={() => setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst PostForm = ({addPost}) =>{\r\n    //States\r\n    const [newPost, setNewPost] = useState({title:'', text:''})\r\n    const [errorState, setErrorState] = useState('')  \r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if (lengthEnsureFunction()[0]) {\r\n            addPost({title:newPost.title, text:newPost.text})\r\n            setNewPost({title:'', text:''})\r\n            setIsOpen(false)\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n        else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        setIsOpen(prevState => !prevState)\r\n    }\r\nreturn(\r\n    <form style={isOpen ? {} : {height:'45px'}} onSubmit={handleSubmit} className='p-2 overflow-hidden w-75 mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={isOpen\r\n            ?'closeForm d-flex align-items-center justify-content-center' \r\n            :'openForm d-flex align-items-center justify-content-center'\r\n            }\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        <small style={{userSelect:'none'}} className='mx-3'> {errorState} </small>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Post'\r\nimport PostForm from './components/PostForm'\r\n\r\nconst Home = ( {postsList, addPost, deletePost, updatePost} ) =>{\r\n  return(\r\n\r\n      <main className='d-flex flex-row justify-content-center'>\r\n        <section className='mainSection'>\r\n          <div className='d-flex justify-content-center w-100'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              coffees={post.likes}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = ({postsList}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [displayShow, setDisplayShow] = useState(false)\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n            foundsList.push(post)\r\n            }else{\r\n                    return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    return(\r\n        <nav className='navBar'>\r\n  \r\n            <Link to='/' className='navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n\r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Chat'>\r\n                            <div>\r\n                                <Icon.Chat/>\r\n                                Chat\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className='navSearch'>\r\n                <Icon.Search/>\r\n                <input value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section className='searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h6>Posts</h6>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {foundPosts.map(post=>(\r\n                            <button className='navBarFounded'> \r\n                                <Link \r\n                                onClick={() => setDisplayShow(false)} \r\n                                to={`/post/${post._id}`} \r\n                                style={{color:'grey'}}> \r\n                                <span style={{color:'white'}}>\r\n                                {post.title}\r\n                                </span>\r\n                                - forum - user \r\n                                </Link>\r\n                            </button>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className='mt-2'>Nothing Found!</h6>}\r\n                </section>\r\n            </div>       \r\n   \r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","import { Link, useParams} from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList}) =>{\r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const { postId, editingParam} = useParams() \r\n    const [editing, setEditing] = useState(editingParam)   \r\n    const [errorState, setErrorState] = useState(' ')\r\n    useEffect(() =>{\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n            })\r\n\r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-row justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\"card selectedPost\">\r\n            <div className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 \"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"3\" placeholder={selectedPost.text} className=\"w-75\"></textarea>\r\n                <small> {errorState} </small>\r\n            </div>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'25vh', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - user</h6>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport Home from './Home'\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\n//ROutes <=\nfunction App() {\n  const [postsList, setPostsList] = useState([])\n  useEffect( () =>{\n    axios.get('/api/posts')\n      .then(res =>{\n        setPostsList(res.data.posts)\n      })\n    \n  }, [])\n\n  const addPost = (post) =>{\n    axios.post('/api/posts', post)\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\n  };\n\n  const deletePost = (id) =>{\n    let newPostList = []\n    axios.delete(`/api/posts/${id}`)\n      .then(res =>{\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\n        setPostsList(newPostList);\n      });\n  }\n\n  const updatePost = (id, newPost) =>{\n    axios.put(`/api/posts/${id}`, newPost)\n      .then(res => setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data)))\n  }\n  \n  return (\n\n    <Router>\n    <div className='main'>\n      <NavBar\n      postsList={postsList}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n      <Route path=\"/Post/:postId&:editingParam\">\n          <SelectedPost \n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            setPostsList={setPostsList}\n          />\n      </Route>\n      <Route path=\"/Post/:postId\">\n          <SelectedPost \n            addPost={addPost}\n            setPostsList={setPostsList}\n            deletePost={deletePost} \n            updatePost={updatePost}\n          />\n      </Route>\n      <Route path=\"/Forums\">\n      </Route>\n      <Route path=\"/Chat\">\n      </Route>\n      <Route path=\"/\">\n          <Home \n          postsList={postsList}\n          addPost={addPost}\n          deletePost={deletePost} \n          updatePost={updatePost}\n          />\n      </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n/*\n <div className='main'>\n            \n      <NavBar\n      postsList={postsList} />\n\n    <main className='d-flex flex-row justify-content-center'>\n    <section className='mainSection'>\n        <div className='d-flex justify-content-center w-100'>\n          <PostForm\n          addPost={addPost} />\n        </div>\n        <div className='mt-3 postsContainer'>\n          {postsList.map(post =>(\n            <Post\n            key={post._id}\n            title={post.title}\n            text={post.text}\n            deletePost={deletePost}\n            id={post._id}\n            />\n          ))}\n        </div>\n      </section>\n    </main>\n    </div>\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}