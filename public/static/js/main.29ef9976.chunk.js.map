{"version":3,"sources":["components/Post.js","components/PostForm.js","Home.js","components/NavBar.js","SelectedPost.js","components/Forum.js","components/ForumForm.js","components/Forums.js","components/LogInForm.js","components/RegisterForm.js","components/SelectedForum.js","components/SelectedProfile.js","components/SearchingSection.js","components/Profile.js","App.js","services/postsServices.js","services/forumsServices.js","services/userServices.js","reportWebVitals.js","index.js"],"names":["Post","inUser","inForum","isSaved","title","text","deletePost","id","coffees","updatePost","postForum","username","sessionUsername","savePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","setSaveState","className","style","maxWidth","to","display","onClick","prev","opacity","transition","visibility","onMouseLeave","newPost","likes","prevState","PostForm","addPost","user","forums","alredyOpen","clickedForum","setShowForm","useEffect","setNewPost","forum","setFoundedForums","isOpen","setIsOpen","showForumDisplay","setShowForumDisplay","foundedForums","lengthEnsureFunction","form","split","length","border","height","onSubmit","e","preventDefault","console","log","msg","toast","error","fontSize","marginBottom","cursor","margin","userSelect","width","type","target","classList","value","disabled","placeholder","onChange","foundsList","forEach","name","toLowerCase","includes","push","setTimeout","map","handleForumClick","_","rows","Home","postsList","setSavedFunction","postId","savedPosts","post","_id","NavBar","setDisplayShow","displayShow","navBarOpen","setNavBarOpen","searchText","setSearchText","foundPosts","setFoundPosts","place","color","SelectedPost","setPostsList","useParams","editingParam","selectedPost","setSelectedPost","original","actual","setCoffees","errorState","setErrorState","editing","setEditing","loadingToast","loading","axios","get","then","res","newSelectedPost","data","dismiss","flexDirection","transform","updatedPost","put","success","posts","Forum","setClickedForum","joinFunction","unJoinFunction","description","isJoined","setIsJoined","ForumForm","showModal","createForm","setShowModal","handLeModalClick","newForum","setNewForum","Forums","setUser","searchedForum","setSearchedForum","foundForums","setFoundForums","showForm","setter","newUser","splice","indexOf","textAlign","LogInForm","logInFunction","password","formUser","setFormUser","handleSubmit","marginRight","RegisterForm","registerFunction","SelectedForum","props","users","selectedForum","setSelectedForum","forumPosts","setForumPosts","backgroundColor","SelectedProfile","selectedUser","setSelectedUser","msgState","setMsgState","userPostsList","setUserPostsList","Spinner","animation","SearchingSection","search","showingPosts","setShowingPosts","founded","Profile","logOutFunction","setSavedPosts","shwowingSaved","setShwowingSaved","newDescription","setNewDescription","newSavedPost","handleEditingClick","handleSaveEdit","promise","minWidth","minHeight","App","setForums","getPostsService","geForumsService","icon","duration","getUserService","addPostPromise","addPostService","newPostList","deletePromise","delete","err","toString","deletePostService","updatePostService","savePromise","readyUser","savePostService","position","window","screen","reverseOrder","toastOptions","path","newForm","createFormPromise","createFormService","logOutService","logInPromise","createdAt","logInService","registerPromise","registerService","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29ef9976.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({inUser = false, inForum = false ,  isSaved, title, text, deletePost, id,  coffees, updatePost, postForum,  username, sessionUsername, savePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(isSaved)\r\n    //Handlers\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        if (coffees !== coffeesState.counter) {\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter\r\n            }\r\n            updatePost(id, newPost)\r\n        }\r\n    }\r\n\r\n    const handleSavePost = () =>{\r\n        savePost(id, setSaveState, saveState)\r\n    }\r\n    return(\r\n            <div  className={`card post ${inForum ?  'w-100 m-2' : ''}`}>\r\n                <Link style={inUser ? {maxWidth:'none'} : {}} to={`/post/${id}`} className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\"><Link to={`/Forum/${postForum}`}>{postForum}</Link> - <Link to={`/Profile/${username}`}>{username}</Link></h6>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div style={inUser ? {display:'none'} : {}} className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() => setOptions(prev => (!prev))}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={handleSavePost} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {isSaved\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onMouseLeave={handleAddCoffee} \r\n                    onClick={() => setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useEffect, useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport toast from 'react-hot-toast'\r\nconst PostForm = ({addPost, username, user, forums ,alredyOpen = false, clickedForum, setShowForm}) =>{\r\n    //States\r\n    useEffect( () =>{\r\n        setNewPost(prev => ({...prev, forum:clickedForum}))\r\n        setFoundedForums(forums)\r\n    }, [clickedForum,forums])\r\n    const [newPost, setNewPost] = useState({title:'', text:'', forum:clickedForum || ''})\r\n    const [isOpen, setIsOpen] = useState(alredyOpen)\r\n    const [showForumDisplay, setShowForumDisplay] = useState(false)\r\n    const [foundedForums, setFoundedForums] = useState(forums)\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.form === '') {\r\n            return [false, 'You need a forum where post!']\r\n        }\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        console.log(newPost)\r\n        if(username){\r\n            const msg = lengthEnsureFunction()[1]\r\n            if (lengthEnsureFunction()[0]) {\r\n                addPost({...newPost, username})\r\n                setNewPost({title:'', text:''})\r\n                setIsOpen(alredyOpen)\r\n                return setShowForm ? setShowForm(false) : null\r\n            }else{\r\n                toast.error(msg)\r\n            }\r\n        }\r\n        if(!username){\r\n            toast.error('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        if (!alredyOpen) {\r\n            user ? setIsOpen(prevState => !prevState) : toast.error('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleForumChange = e =>{\r\n        let foundsList = [];\r\n        forums.forEach(forum => {\r\n        if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n            foundsList.push(forum)\r\n        }else{\r\n            return null;\r\n        }\r\n        });\r\n        setFoundedForums(foundsList)\r\n        if (foundsList.length === 0) {\r\n            setTimeout(() => setShowForumDisplay(false), 3000)\r\n        }\r\n    }\r\n    const handleForumClick = forum =>{\r\n        setShowForumDisplay(false)\r\n        setNewPost(prev => ({...prev, forum}))\r\n    }\r\n\r\n    const handleModalClick = e =>{\r\n        if (e.target.classList[0] === 'postFormModal') {\r\n            setShowForumDisplay(false)\r\n        }\r\n    }\r\n\r\n    const handleForumSelectionClick = e =>{\r\n        if (e.target.classList[0] === 'form-control') {\r\n            setShowForumDisplay(true)\r\n        }\r\n    }\r\n\r\nreturn(\r\n    <form style={isOpen ? {border:'none'} : {height:'45px', border:'none'}} onSubmit={handleSubmit} className='p-2 overflow-hidden w-75 mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={`${alredyOpen ? 'd-none' : ''} d-flex align-items-center justify-content-center`}\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <section  onClick={handleForumSelectionClick} className=\"mb-3 w-25\">\r\n            <input  style={{cursor:'pointer'}} value={newPost.forum} disabled placeholder='Forum' type=\"text\" className=\"form-control\" />\r\n            <section onClick={handleModalClick} className={`postFormModal ${showForumDisplay ? '' : 'd-none'}`}>\r\n                <div className='postForumModalSection'>\r\n                <input  onChange={handleForumChange}  placeholder='Search' type=\"text\" className=\"form-control\" />\r\n                <ul>\r\n                {foundedForums.map(forum => (\r\n                    <li onClick={() => handleForumClick(forum.name)}> {forum.name} </li>\r\n                    ))}\r\n                </ul>\r\n                <button type='button' onClick={_ => setShowForumDisplay(false)} className='btn btn-danger'>Cancel</button>\r\n                </div>\r\n            </section>\r\n        </section>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Post'\r\nimport PostForm from './components/PostForm'\r\nconst Home = ( {postsList, addPost, deletePost, updatePost, user, savePost, forums} ) =>{\r\n  const setSavedFunction = (postId) =>{\r\n    let state = false;\r\n    user.savedPosts.forEach(id => id === postId ? state = !state : null )\r\n    return state\r\n  }\r\n\r\n  return(\r\n      <main className='d-flex flex-row justify-content-center'>\r\n\r\n        <section className='mainSection'>\r\n          <div className='d-flex justify-content-center w-100'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            username={user ? user.username : false} \r\n            user={user}\r\n            forums={forums}\r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              inUser={false}\r\n              savePost={savePost}\r\n              isSaved={user ? setSavedFunction(post._id) : false}\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              postForum={post.forum}\r\n              username={post.user}\r\n              coffees={post.likes}\r\n              sessionUsername={user ? user.username : ''}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst NavBar = ({postsList, user, setDisplayShow, displayShow, navBarOpen,setNavBarOpen}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                foundsList.push(post)\r\n            }else{\r\n                return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    return(\r\n        <nav onClick={() => setNavBarOpen(false)} className={`navBar ${navBarOpen ? 'navBarOpen' : ''}`}>\r\n            <ReactTooltip place='bottom' />\r\n            <Link data-tip=\"Home\" to='/' className='gap-2 navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n            <Link to='/' className='gap-2 navText navHomeBtn'>\r\n                <Icon.HouseFill/>\r\n                Home\r\n            </Link>   \r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <Link to='/Profile'>\r\n                            {user ?\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                {user.username}\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                LogIn\r\n                            </div>}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div style={{cursor:'default'}} className=' navItem navSearch navItem'>\r\n                <input placeholder='Search...' className='navItem' value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section className='navItem searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h5>Posts</h5>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {foundPosts.map(post=>(\r\n                                <Link to={`/post/${post._id}`} >\r\n                                    <button className='navItem navBarFounded ' \r\n                                            onClick={() => setDisplayShow(false)} \r\n                                            style={{color:'grey'}}> \r\n                                            <span className='navItem' style={{color:'white'}}>\r\n                                            {post.title}\r\n                                            </span>\r\n                                            <br/> {post.forum} - {post.user} \r\n                                    </button>\r\n                                </Link>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className=' navItem mt-2'>Nothing Found!</h6>}\r\n                    \r\n\r\n                    <Link to={`/Searching&search=${searchText}`} className='searchDisplayOthers'>See more posts, users or forums here! </Link>\r\n                </section>\r\n                    <Link data-tip=\"Search\" className='d-flex align-items-center' to={`/Searching&search=${searchText}`}>\r\n                        <Icon.Search />\r\n                    </Link>\r\n                \r\n            </div>       \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","import { Link, useParams} from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList, sessionUsername, savePost}) =>{\r\n    const { postId, editingParam } = useParams() \r\n    \r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const [errorState, setErrorState] = useState(' ')\r\n    const [editing, setEditing] = useState(editingParam)   \r\n    \r\n    useEffect(() =>{\r\n        const loadingToast = toast.loading('Loading...')\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id,\r\n                    username:res.data.user\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n                toast.dismiss(loadingToast)\r\n            })\r\n        \r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id,\r\n                        user:res.data.user\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                    toast.success('Edited!')\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-row justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\"card selectedPost\">\r\n            <form className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 input form-control\"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"6\" placeholder={selectedPost.text} className=\"w-75 form-control\"></textarea>\r\n                <small> {errorState} </small>\r\n            </form>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'300px', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - {selectedPost.username} </h6>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link style={selectedPost.username === sessionUsername ? {} : {display:'none'}} to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div style={selectedPost.username === sessionUsername ? {} : {display:'none'}} onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","import { Link } from 'react-router-dom';\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport toast from 'react-hot-toast';\r\nimport { useState,useEffect } from 'react';\r\nconst Forum = ({forum, user, setShowForm, setClickedForum, joinFunction, unJoinFunction}) =>{\r\n    const {name, description} = forum\r\n    const [isJoined, setIsJoined] = useState(false)\r\n    const handlePostClick  = _ =>{\r\n        setShowForm(prev => !prev)\r\n        setClickedForum('name')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(user){\r\n            user.forums.forEach(forum =>{\r\n                if (forum === name) {\r\n                    setIsJoined(true)\r\n                }\r\n            })\r\n        }\r\n    }, [name, user])\r\n\r\n    const handleJoinClick  = _ =>{\r\n        joinFunction(name, setIsJoined)\r\n    }\r\n    const handleUnJoinClick  = _ =>{\r\n        unJoinFunction(name, setIsJoined)\r\n    }\r\n    return (\r\n        <Link to={`/Forum/${name}`} >\r\n            <main  className='forum'>\r\n                <h2> {name} </h2>\r\n                <p> {description} </p>\r\n            </main>\r\n            <div  className='forumBtnContainer'>\r\n            {isJoined \r\n            ?                \r\n            <Link to='/Forums' onClick={user ? handleUnJoinClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? isJoined ? 'btn-danger' : 'btn-main' : 'btn-secondary'}`}>\r\n                UnJoin\r\n                <Icon.PlayFill/>\r\n                </Link>\r\n            :     \r\n            <Link to='/Forums' onClick={user ? handleJoinClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? isJoined ? 'btn-danger' : 'btn-main' : 'btn-secondary'}`}>\r\n                Join\r\n                <Icon.Play/>\r\n            </Link>}\r\n                <Link  to='/Forums' onClick={user ? handlePostClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? 'btn-second' : 'btn-secondary'}`}>\r\n                    Post \r\n                    <Icon.CursorFill/>\r\n                </Link>\r\n            </div>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default Forum;","import { useState } from \"react\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst ForumForm = ({showModal, setShowModal, createForm, handLeModalClick}) =>{\r\n    const [newForum, setNewForum] = useState({name:'', description:''})\r\n\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newForum.name === '') {\r\n            return 'The forum needs a name!'\r\n        }\r\n        if (newForum.description === '') {\r\n            return 'The forum needs almost a simple description!'\r\n        }\r\n        if (newForum.name.split('').length > 250) {\r\n            return 'The name have a 250 characters max!'\r\n        }\r\n        if (newForum.description.split('').length > 1500) {\r\n            return 'The description have a 1500 characters max!'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n\r\n    const handleCreateForum = e =>{\r\n        e.preventDefault();\r\n        const msg  = lengthEnsureFunction()\r\n        if(msg === ''){\r\n            createForm(newForum)\r\n        }else{\r\n            toast.error(msg)\r\n        }\r\n    }\r\n    const handleNameChange = e =>{setNewForum(prevState => ({...prevState, name:e.target.value}))}\r\n    const handleDescriptionChange = e =>{setNewForum(prevState => ({...prevState, description:e.target.value}))}\r\n    return(\r\n        <main onClick={handLeModalClick} style={showModal ? {} : {display:'none'}} className='forumFormModal'>\r\n            <form  onSubmit={handleCreateForum} style={{margin:'0 auto'}} className='forumForm'>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input placeholder='Name' value={newForum.name} onChange={handleNameChange} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Description</label>\r\n                    <textarea placeholder='Description' value={newForum.description} onChange={handleDescriptionChange} className=\"form-control\" rows='4'/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-main\">Create</button>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ForumForm;","import * as Icon from 'react-bootstrap-icons'\r\nimport { useEffect, useState } from 'react';\r\n//Components =>\r\nimport Forum from './Forum'\r\nimport ForumForm from './ForumForm';\r\nimport toast from 'react-hot-toast'\r\nimport PostForm from './PostForm'\r\nimport axios from 'axios';\r\n//Components <=\r\n\r\nconst Forums = ({ forums, createForm, showModal, setShowModal, user, addPost, setUser }) =>{\r\n    const [searchedForum, setSearchedForum] = useState('')\r\n    const [foundForums, setFoundForums] = useState(forums)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [clickedForum, setClickedForum] = useState('')\r\n    useEffect(()=>{\r\n        setFoundForums(forums)\r\n    }, [forums])\r\n\r\n    const handleSearchChange = e =>{\r\n        setSearchedForum(e.target.value)\r\n        if (e.target.value !== '') {\r\n            let foundsList = [];\r\n            forums.forEach(forum => {\r\n                if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                    foundsList.push(forum)\r\n                }\r\n            });\r\n            setFoundForums(foundsList)\r\n        }\r\n        else{\r\n            setFoundForums(forums)\r\n        }\r\n    }\r\n    const joinFunction = (forum, setter) =>{\r\n        axios.put(`/api/users/${user.id}`, {forums:[...user.forums, forum]})\r\n        .then(res => {\r\n            if(res.data.state){\r\n                setter(true)\r\n                setUser(res.data.newUser)\r\n            }\r\n        })\r\n    }\r\n\r\n    const unJoinFunction = (forum, setter) =>{\r\n        let forums = user.forums\r\n        console.log(forums)\r\n        forums.splice(user.forums.indexOf(forum), 1);\r\n        console.log(forums)\r\n        axios.put(`/api/users/${user.id}`, {forums})\r\n        .then(res => setter(false))\r\n    }\r\n\r\n    const handleCreateFormClick = () =>{\r\n        user \r\n        ? setShowModal(prev => !prev)\r\n        : toast.error('You need to be logged in')\r\n    }\r\n    const handLeModalClick = e =>{\r\n        if (e.target.classList[0] === 'forumFormModal') {\r\n            setShowModal(false)\r\n            setShowForm(false)\r\n        }\r\n    }\r\n    return(\r\n        <main >\r\n            <section onClick={handLeModalClick} className={`forumFormModal ${showForm ? null :'d-none'} `}>\r\n                <PostForm \r\n                username={user ? user.username : false} \r\n                user={user}\r\n                forums={forums}\r\n                alredyOpen={true}\r\n                clickedForum={clickedForum}\r\n                addPost={addPost}\r\n                setShowForm={setShowForm}\r\n                />\r\n            </section>\r\n            <ForumForm  handLeModalClick={handLeModalClick} user={user} createForm={createForm} showModal={showModal} setShowModal={setShowModal} />\r\n            <button onClick={handleCreateFormClick} className={`btn ${showForm ? 'd-none' : ''} ${showModal ? 'btn-danger' : 'btn-forum'} mt-1 mx-2 position-fixed`}>\r\n                {showModal ? 'Cancel' : 'Create Forum'}\r\n            </button>\r\n            <button onClick={_ => setShowForm(false)} className={`btn ${showForm ?  '' : 'd-none'} btn-danger mt-1 mx-2 position-fixed`}>\r\n                Cancel\r\n            </button>\r\n            <h2 style={{textAlign:'center'}}> Search for Forums </h2>\r\n                <div className='forumSearchBar  d-flex align-items-center justify-content-center gap-2'>\r\n                    <Icon.Search/>\r\n                    <input onChange={handleSearchChange} value={searchedForum} placeholder='Just type...' type='text'></input>\r\n                </div>\r\n            <h4 className='mt-3 mb-2' style={{textAlign:'center'}}> {`${foundForums.length} ${foundForums.length !== 1 ? 'Forums' : 'Forum'}`} </h4>\r\n            {/* <ForumForm /> */}\r\n            <ul className='forumsContainer'>\r\n                {foundForums.map(forum =>{\r\n                    return (\r\n                        <div onClick={_=> setClickedForum(forum.name)} key={forum.name}>\r\n                           <Forum \r\n                           setClickedForum={setClickedForum} \r\n                           user={user} \r\n                           key={forum.name} \r\n                           forum={forum} \r\n                           setShowForm={setShowForm} \r\n                           unJoinFunction={unJoinFunction}\r\n                           joinFunction={joinFunction}\r\n                           />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Forums;","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LogInForm = ({logInFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Renders\r\n    const renderLogInForm = () =>{\r\n        return(\r\n            <form onSubmit={handleSubmit}  className='logInForm'>\r\n                <h3>Log In</h3>\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                    value={formUser.username} \r\n                    type=\"text\" className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))}\r\n                    value={formUser.password} \r\n                     type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                     />\r\n                </div>\r\n                <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary \">Log In</button>\r\n                <Link to='/Register'>You don´t have an account?</Link>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            logInFunction(formUser)\r\n        }\r\n    }\r\n    return user ? <Redirect to='/Home'/> : renderLogInForm();\r\n}\r\n\r\nexport default LogInForm;\r\n","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({registerFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            registerFunction(formUser)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className='logInForm'>\r\n            <h3>Register</h3>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Username</label>\r\n                <input\r\n                onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                value={formUser.username} \r\n                type=\"text\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label   className=\"form-label\">Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))} \r\n                value={formUser.password} \r\n                type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary\">Register</button>\r\n            <Link to='/LogIn'>You alredy have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport Post from './Post'\r\nimport PostForm from './PostForm'\r\nconst SelectedForum = (props) =>{\r\n    const { forum } = useParams();\r\n    const [selectedForum, setSelectedForum] = useState({name:'', description:'', users:[]})\r\n    const [forumPosts, setForumPosts] = useState([])\r\n    useEffect(() =>{\r\n        axios.get(`/api/forums/${forum}`)\r\n            .then(res =>{\r\n                res.data.name\r\n                ? setSelectedForum(res.data)\r\n                : <Redirect to='/Home' />\r\n            })\r\n        axios.get(`/api/forum=${forum}/posts`)\r\n            .then(res =>{\r\n                setForumPosts(res.data.postsList)\r\n            })\r\n    }, [forum])\r\n    const {name, description, users} = selectedForum\r\n    return(\r\n        <main className='selectedForum'>\r\n            <section className='selectedForumInfo'>\r\n                <div className='d-flex gap-2 p-1'> <h2  className='d-inline-block p-0'>{name}</h2> <button className='btn btn-info'>Join</button> </div>\r\n                <ul>\r\n                    {users.map(user => <h3> user </h3>)}\r\n                </ul>\r\n                        {/* <button  to='/Forums' className={`btn btn-info 'btn-second'`}>\r\n                Post \r\n                <Icon.CursorFill/>\r\n            </button> */}\r\n            </section>\r\n            <section style={{margin:'0 auto'}} className=' w-75 d-flex justify-content-between'>\r\n                <article className='w-75'>\r\n                        {forumPosts.length > 0 \r\n                    ? \r\n                    <ul className='w-100' >\r\n                        {forumPosts.map(post => (\r\n                            <div className='d-flex justify-content-center '>\r\n                            <Post\r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            id={post._id}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            postForum={post.forum}\r\n                            inForum={true}\r\n                            />\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                    : <h2  style={{textAlign:'center'}}>Any post</h2>}\r\n                </article>\r\n                <article className='card my-2 p-2 w-25' style={{backgroundColor:'white'}}> \r\n                    <h5 className=''>About the forum:</h5>\r\n                    {description}\r\n                </article>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedForum;","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Post from './Post'\r\nimport axios from 'axios';\r\nconst SelectedProfile = _ =>{\r\n    const { user } = useParams();\r\n    const [selectedUser, setSelectedUser] = useState(null)\r\n    const [msgState, setMsgState] = useState(false)\r\n    const [userPostsList, setUserPostsList] = useState([])\r\n    useEffect(() =>{\r\n        axios.get(`/api/user/${user}`)\r\n            .then(res => setSelectedUser(res.data));\r\n        axios.get(`/api/user=${user}/posts`)\r\n        .then(res => {\r\n            setUserPostsList(res.data.postsList)\r\n        })\r\n    }, [user])\r\n    \r\n    const renderNoPost = () =>{\r\n        setTimeout(() => {setMsgState(false)}, 2000)\r\n        return(\r\n            msgState ? <Spinner className='mt-5' animation='border'></Spinner> : <h5>Any posts...</h5>\r\n        )\r\n    }\r\n\r\n    const renderSelectedUser = _ =>{\r\n        return(\r\n            <div style={{width:'100vw', margin:'0 auto'}} className='profileSection'>\r\n            {userPostsList.length !== 0\r\n            ?                \r\n            <ul className='userPosts'>\r\n                {userPostsList.map(post =>(\r\n                    <Post\r\n                    inUser={true}\r\n                    key={post._id}\r\n                    title={post.title}\r\n                    text={post.text}\r\n                    id={post._id}\r\n                    username={post.user}\r\n                    coffees={post.likes}\r\n                    sessionUsername={user ? user.username : ''}\r\n                />\r\n                ))}\r\n            </ul> \r\n            : renderNoPost()\r\n            }\r\n            <section className='userInfo'>\r\n                <h3> {selectedUser.username} </h3>\r\n                <h6>Description:</h6>\r\n                <textarea disabled className='form-control' ></textarea>\r\n                <h3>Forums:</h3>\r\n                {user.forums && user.forums.length > 0 \r\n                ? user.forums.map(forum => <div> {forum} </div>)\r\n                : <h3 style={{textAlign:'center'}}> Any forum</h3>}\r\n            </section>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        selectedUser ? renderSelectedUser() : <h2 style={{textAlign:'center'}}> There is no user!</h2>\r\n    )\r\n}\r\n\r\nexport default SelectedProfile;","import { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Post from './Post'\r\nconst SearchingSection = ({postsList, forums}) =>{\r\n    const { search }  = useParams()\r\n    const [showingPosts, setShowingPosts] = useState(true)\r\n    const [founded, setFounded] = useState({posts:postsList, users:[]})\r\n\r\n    return(\r\n        <main> \r\n            <div className='bg-white p-2'>\r\n                <h3>{search}</h3>\r\n                <h6>Founded posts and users:</h6>\r\n            </div>\r\n            <div className='d-flex gap-2 p-2'>\r\n                <button onClick={() => setShowingPosts(true)} className={`btn btn-second${showingPosts ? '' : 'ary'}`}>Posts</button>\r\n                <button onClick={() => setShowingPosts(false)} className={`btn btn-second${!showingPosts ? '' : 'ary'}`} >Users</button>\r\n            </div>\r\n            <div className='d-flex'>\r\n                <section style={showingPosts ? {}  : {display:'none'}} className='w-100 mx-3' >\r\n                    <h4>Posts</h4>\r\n                    <ul className='m-0 p-0'>\r\n                        {founded.posts.map( post =>(\r\n                            <Post \r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            id={post._id}\r\n                            postForum={post.forum}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n\r\n                <section className='w-100 mx-3' style={!showingPosts ? {}  : {display:'none'}}>\r\n                    <h4>Users</h4>\r\n\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default SearchingSection;","import { useEffect, useState } from 'react';\r\nimport { Redirect} from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Post from './Post'\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Profile = ({user, logOutFunction}) =>{\r\n    const [userPostsList, setUserPostsList] = useState([])\r\n    const [msgState, setMsgState] = useState(true)\r\n    const [savedPosts, setSavedPosts] = useState(user ? user.savedPosts : [])\r\n    const [shwowingSaved, setShwowingSaved] = useState(false)\r\n    const [newDescription, setNewDescription] = useState({description:user ? user.description : '', editing:false})\r\n\r\n    useEffect(() =>{\r\n        if (user){\r\n            axios.get(`/api/user=${user.username}/posts`)\r\n            .then(res => {\r\n                setUserPostsList(res.data.postsList)\r\n                })\r\n            let newSavedPost = []\r\n            savedPosts.forEach(postId => {\r\n                axios.get(`/api/posts/${postId}`)\r\n                .then(res => {\r\n                    newSavedPost.push(res.data);\r\n                })\r\n            });\r\n            setSavedPosts(newSavedPost)\r\n        }\r\n    }, [user])\r\n\r\n    const renderNoPost = () =>{\r\n        setTimeout(() => {setMsgState(false)}, 2000)\r\n        return(\r\n            msgState ? <Spinner className='mt-5' animation='border'></Spinner> : <h3 style={{textAlign:'center'}}>Any Post Yet</h3>\r\n        )\r\n    }\r\n\r\n    const handleEditingClick = _ =>{\r\n        setNewDescription(prev => ({...prev, editing:!prev.editing}))\r\n    }\r\n\r\n    const handleSaveEdit = _ =>{\r\n        if (user.description === newDescription.description) toast.error('No change made')\r\n        else if (newDescription.description.length > 550){\r\n            toast.error('The description have a 550 max!')\r\n        }else{\r\n            let promise = axios.put(`/api/users/${user.id}`, {description:newDescription.description})\r\n                .then(res =>{\r\n                    setNewDescription(prev => ({...prev, editing:false}))\r\n                })\r\n            toast.promise(promise, {\r\n                loading:'Updating...',\r\n                success:'Edited!',\r\n                error:'Error!'\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderProfileSection = () =>{\r\n        return (\r\n            <div style={{width:'100vw', margin:'0 auto'}} className='profileSection'>\r\n                <ul className='userPosts'>\r\n                    <button style={{color:'white'}} onClick={_ => shwowingSaved && setShwowingSaved(false)} className={`btn btn-second${!shwowingSaved ? '' : 'ary'} my-2 mx-1`}>Your Posts</button>\r\n                    <button onClick={_ => shwowingSaved || setShwowingSaved(true)} className={`btn btn-second${shwowingSaved ? '' : 'ary'} my-2 mx-1`}>Saved Posts</button>\r\n                    {shwowingSaved \r\n                    ? savedPosts[0] \r\n                        ? savedPosts.map(post =>(\r\n                            <Post\r\n                            inUser={true}\r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            id={post._id}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            postForum={post.forum}\r\n                            sessionUsername={user ? user.username : ''}\r\n                        />\r\n                        )) \r\n                        : <h3 style={{textAlign:'center'}}>Any Saved Post Yet</h3>\r\n                    : userPostsList.length > 0 \r\n                        ? userPostsList.map(post =>(\r\n                            <Post\r\n                            inUser={true}\r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            postForum={post.forum}\r\n                            id={post._id}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            sessionUsername={user ? user.username : ''}\r\n                            />\r\n                        ))\r\n                        : renderNoPost()}\r\n\r\n                </ul> \r\n                <section className='userInfo'>\r\n                    <h3> {user.username} \r\n                    <button onClick={() => logOutFunction()} className='logout'><Icon.DoorClosed/></button> \r\n                    </h3> \r\n                    <div className='descriptionSection'>\r\n                        <textarea disabled={!newDescription.editing} onChange={e => setNewDescription(prev => ({...prev, description:e.target.value}))} value={newDescription.description} className='form-control' placeholder='Description'></textarea>\r\n                        <div style={{minWidth:'50px', width:'25%'}}>\r\n                            {newDescription.editing \r\n                            ? <div>\r\n                                <button onClick={handleSaveEdit}>\r\n                                    <Icon.CheckLg/>\r\n                                </button>\r\n                                <button onClick={handleEditingClick}>\r\n                                    <Icon.XLg/>\r\n                                </button>\r\n                            </div> \r\n                            : <button onClick={handleEditingClick}>\r\n                                <Icon.PencilFill/>\r\n                            </button>}\r\n                        </div>\r\n                    </div>\r\n                        <h3>Forums:</h3>\r\n                    <div style={{minHeight:'50vh'}} className=' d-flex flex-column overflow-auto'>\r\n                        {user.forums && user.forums.length > 0 \r\n                        ? user.forums.map(forum => <Link className='my-1 mx-3 d-flex alig-items-center card px-3 py-2' to={`/Forum/${forum}`}> <h4>{forum}</h4> </Link>)\r\n                        : <h3 style={{textAlign:'center'}}> Any forum </h3>}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return user ? renderProfileSection() : <Redirect to='/LogIn' />\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport * as Icon from 'react-bootstrap-icons';\n//Components =>\n//Toaster\nimport { Toaster } from 'react-hot-toast';\nimport Home from './Home'\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\nimport Forums from './components/Forums'\nimport LogInForm from './components/LogInForm'\nimport RegisterForm from './components/RegisterForm'\nimport SelectedForum from './components/SelectedForum';\nimport SelectedProfile from './components/SelectedProfile'\nimport SearchingSection from './components/SearchingSection';\n//Components <=\n\n//Services =>\nimport { addPostService, updatePostService, deletePostService, getPostsService } from './services/postsServices'\nimport { logInService, registerService, logOutService, savePostService, getUserService } from './services/userServices'\nimport { createFormService, geForumsService } from './services/forumsServices';\n//Services <=\n\n\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Profile from './components/Profile';\n//ROutes <=\nconst App = () => {\n  const [forums, setForums] = useState([])\n  const [postsList, setPostsList] = useState([])\n  const [user, setUser] = useState(null)\n  const [navBarOpen, setNavBarOpen] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  useEffect( () =>{\n    //Fetch de los posts\n    getPostsService(setPostsList)\n    //Fetch de los forums\n    geForumsService(setForums)\n    //Fetch de los users\n    getUserService(setUser)\n  }, [])\n\n  //Post functions =>\n  const addPost = (post) => addPostService(post, setPostsList)\n  const deletePost = (id) => deletePostService(id, setPostsList, postsList)\n  const updatePost = (id, newPost) => updatePostService(id, newPost, setPostsList)\n  //Post functions <=\n  \n  //User functions =>\n  const logInFunction = (user) => logInService(user, setUser)  \n  const registerFunction = (user) => registerService(user, setUser)\n  const logOutFunction = _ => logOutService(setUser)\n  const savePost = (postId, setSaveState, saveState) => savePostService(postId, setSaveState, saveState, user, setUser)\n  //User functions <=\n  \n  //Forums functions =>\n  const createForm = newForm => createFormService(newForm, setForums, setShowModal)\n  //Forums functions <=\n  \n  //NavBarSearchSection =>\n  const [displayShow, setDisplayShow] = useState(false)\n  const handleClick = e =>{\n    if (e.target.classList[0] !== 'navItem') {\n      setDisplayShow(false)\n    }\n  }\n  //NavBarSearchSection <=\n\n  const activeResponsive = () =>{\n    setNavBarOpen(prev => !prev)\n  }\n\n  return (\n    <Router>\n    <div onClick={handleClick} className='main'>\n      <Toaster \n       position={window.screen.width > 600 ? \"bottom-right\" : \"top-center\"}\n       reverseOrder={false}\n       toastOptions={{\n          className:'toast'\n      }}\n       />\n      <div className='navBarResponsiveBtn'>\n        <button onClick={window.window < 600 ? {} : () =>{ activeResponsive() }}>\n          {navBarOpen ? <Icon.X/> : <Icon.List/>}\n        </button>\n        <button className='gap-2 navText' >\n          <Icon.CupFill/>\n          CoffeePosts\n        </button>\n      </div>\n      <NavBar\n      setNavBarOpen={setNavBarOpen}\n      navBarOpen={navBarOpen}\n      postsList={postsList}\n      user={user}\n      setDisplayShow={setDisplayShow}\n      displayShow={displayShow}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n\n        <Route path=\"/Searching&search=:search\">\n          <SearchingSection \n          forums={forums}\n          postsList={postsList}\n                      />\n        </Route>\n\n        <Route path=\"/Post/:postId&:editingParam\">\n            <SelectedPost \n              sessionUsername={user ? user.username : ''} \n              addPost={addPost}\n              savePost={savePost}\n              deletePost={deletePost} \n              updatePost={updatePost}\n              user={user}\n              setPostsList={setPostsList}\n              />\n        </Route>\n\n        <Route path=\"/Post/:postId\">\n            <SelectedPost \n              sessionUsername={user ? user.username : ''} \n              addPost={addPost}\n              savePost={savePost}\n              setPostsList={setPostsList}\n              deletePost={deletePost} \n              updatePost={updatePost}\n              />\n        </Route>\n\n        <Route path=\"/Forums\">\n          <Forums \n          setUser={setUser} \n          addPost={addPost} \n          user={user} \n          forums={forums} \n          createForm={createForm} \n          showModal={showModal} \n          setShowModal={setShowModal} \n          />\n        </Route>\n\n        <Route path=\"/Forum/:forum\">\n          <SelectedForum/>\n        </Route>\n\n        <Route path=\"/Profile/:user\">\n          <SelectedProfile />\n        </Route>\n\n        <Route path=\"/Profile\">\n          <Profile\n          logOutFunction={logOutFunction}\n          user={user} \n          />\n        </Route>\n\n        <Route path=\"/LogIn\">\n        <LogInForm \n          logInFunction={logInFunction}\n          user={user}\n            />\n        </Route>\n\n        <Route path=\"/Register\">\n        <RegisterForm \n        registerFunction={registerFunction}\n        user={user}\n            />\n        </Route>\n\n        <Route path=\"/Home\">\n        <Home \n            user={user} \n            postsList={postsList}\n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            savePost={savePost}\n            forums={forums.length > 0 ? forums : []}\n            />\n        </Route>\n\n        <Route path='/:noFound'>\n          {() =>{\n            return(<h3 style={{textAlign:'center'}}>404 Page Not Found</h3>)\n          }}\n        </Route>\n\n        <Route path=\"/\">\n          <Redirect to='/Home'/>\n        </Route>\n\n      </Switch>\n    </div>\n  </Router>\n  );\n}\nexport default App;\n","import toast from 'react-hot-toast'\r\nimport axios from 'axios';\r\n\r\nexport const addPostService = (post, setPostsList) =>{\r\n    const addPostPromise = axios.post('/api/posts', post)\r\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\r\n    toast.promise(addPostPromise, {\r\n      loading:'Posting...',\r\n      success:'Posted!',\r\n      error:res => console.log(res)\r\n    })\r\n  };\r\n\r\n  export const deletePostService = (id, setPostsList, postsList) =>{\r\n    let newPostList = []\r\n    const deletePromise = axios.delete(`/api/posts/${id}`)\r\n      .then(res =>{\r\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\r\n        setPostsList(newPostList);\r\n      });\r\n      toast.promise(deletePromise,{\r\n        loading: 'Deleting...',\r\n        success: `Successfully deleted`,\r\n        error: (err) => `This just happened: ${err.toString()}!`,\r\n      })\r\n  }\r\n\r\n  export const updatePostService = (id, newPost,setPostsList) =>{\r\n    axios.put(`/api/posts/${id}`, newPost)\r\n      .then(res => {\r\n        if(res.data[0]){\r\n          setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data))\r\n        } \r\n        toast.success('Successfully updated!')\r\n      })\r\n    }\r\n    \r\n  export const getPostsService = setPostsList =>{\r\n    axios.get('/api/posts')\r\n    .then(res =>{\r\n      setPostsList(res.data.posts)\r\n    })\r\n  }\r\n","import toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nexport const createFormService = (newForm, setForums, setShowModal) =>{\r\n    const createFormPromise = axios.post('/api/forums', newForm)\r\n    .then(res => {\r\n      if(res.data) {\r\n        setForums(prev => [...prev, res.data[1]])\r\n        setShowModal(false)  \r\n      }\r\n    })\r\n    toast.promise(createFormPromise, {\r\n      loading:'Creating form...',\r\n      success:'Forum created!',\r\n      error:'The forum alredy exist!'\r\n    })\r\n  }\r\n\r\nexport const geForumsService = setForums =>{\r\n  axios.get('/api/forums')\r\n  .then(res => {\r\n    setForums(res.data.forums)\r\n  })\r\n}","import toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nexport const logInService = (user, setUser) =>{\r\n    const logInPromise = axios.post('api/login', user)\r\n    .then(res => {\r\n      const [state, user] = res.data\r\n      const {username, _id, createdAt, savedPosts, forums} = user\r\n      const userWrongFunction = () =>{\r\n        setUser(null);\r\n        toast.error('Username or Password wrong!')\r\n      }\r\n      state \r\n        ? setUser({username, id:_id, createdAt, savedPosts, forums})\r\n        : userWrongFunction()\r\n    })\r\n  //Toast\r\n  toast.promise(logInPromise, {\r\n    loading:'Login in...',\r\n    error: 'User or Password are wrong!',\r\n    success: 'Logged!'\r\n  })\r\n}\r\n\r\nexport const registerService = (user, setUser) =>{\r\n    if (user.username !== '' && user.password !== '') {\r\n      const registerPromise = axios.post('api/register', user)\r\n      .then(res => {\r\n        setUser(res.data[1])\r\n      })\r\n      //Toast\r\n      toast.promise(registerPromise, {\r\n        loading:'Registering...',\r\n        success:`User Created!`,\r\n        error:res => res.toString()\r\n      })\r\n    }else{\r\n      //Toast\r\n      \r\n    }\r\n  }\r\n\r\nexport const logOutService = (setUser) =>{\r\n    axios.get('/api/logout')\r\n      .then(() => {\r\n        setUser(null)\r\n        toast('Logged Out!', {icon:'👌'});\r\n      })\r\n  }\r\nexport const savePostService = (postId, setSaveState, saveState, user, setUser) =>{\r\n    if (user) {\r\n      const savePromise = axios.put(`/api/users/${user ? user.id : 'none'}`, {postId, savedPosts:user.savedPosts})\r\n        .then(res => {\r\n          setSaveState(prevState => !prevState)\r\n          setUser(prev => ({...prev, savedPosts:res.data.readyUser.savedPosts}))\r\n        })\r\n          toast.promise(savePromise, {\r\n            loading:'Saving...',\r\n            success:`Succesfyllu ${saveState ? 'UnSaved' : 'Saved'}`,\r\n            error:res => `Error while saving: ${res.data}`\r\n          })\r\n        }else{\r\n        toast.error('You are not logged in...')\r\n      }\r\n}\r\n\r\nexport const getUserService = setUser =>{\r\n  axios.get('/api/user')\r\n  .then(res =>{\r\n    if (!res.data.msg) {\r\n      setUser(res.data)\r\n      console.log(res.data)\r\n      toast.success(`Welcome back ${res.data.username}!`, {icon:'👋',duration:1500})\r\n    }else{\r\n      return null;\r\n    }\r\n  })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}