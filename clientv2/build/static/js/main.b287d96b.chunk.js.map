{"version":3,"sources":["components/Posts/Post.js","components/Posts/PostForm.js","Home.js","components/NavBar.js","components/Comment.js","SelectedPost.js","services/postsServices.js","components/Forums/Forum.js","components/Forums/ForumForm.js","components/Forums/Forums.js","components/Users/LogInForm.js","components/Users/RegisterForm.js","components/Forums/SelectedForum.js","components/Users/SelectedProfile.js","components/SearchingSection.js","components/Users/Profile.js","App.js","services/forumsServices.js","services/userServices.js","reportWebVitals.js","index.js"],"names":["Post","inUser","inForum","isSaved","title","text","deletePost","id","coffees","updatePost","postForum","username","sessionUsername","savePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","setSaveState","className","style","maxWidth","to","width","borderRadius","alt","src","display","onClick","prev","opacity","transition","visibility","prevState","newPost","likes","fontSize","PostForm","addPost","user","forums","alredyOpen","clickedForum","setShowForm","useEffect","setNewPost","forum","setFoundedForums","isOpen","setIsOpen","showForumDisplay","setShowForumDisplay","foundedForums","lengthEnsureFunction","form","split","length","console","log","border","height","gap","onSubmit","e","preventDefault","msg","toast","error","marginBottom","cursor","margin","userSelect","type","target","classList","value","disabled","placeholder","onChange","foundsList","forEach","name","toLowerCase","includes","push","setTimeout","map","handleForumClick","_","rows","Home","postsList","setSavedFunction","postId","savedPosts","post","_id","NavBar","setDisplayShow","displayShow","navBarOpen","setNavBarOpen","searchText","setSearchText","foundPosts","setFoundPosts","list","slice","setLimit","color","Comment","comment","SelectedPost","setPostsList","useParams","editingParam","selectedPost","setSelectedPost","original","actual","setCoffees","errorState","setErrorState","editing","setEditing","newComment","setNewComment","loadingToast","loading","axios","get","then","res","newSelectedPost","data","comments","dismiss","flexDirection","transform","updatedPost","put","success","posts","onMouseLeave","oldsComments","setter","postCommentService","Forum","setClickedForum","unJoinFunction","joinFunction","description","isJoined","setIsJoined","ForumForm","showModal","createForm","setShowModal","handLeModalClick","newForum","setNewForum","Forums","setUser","searchedForum","setSearchedForum","foundForums","setFoundForums","showForm","newUser","splice","indexOf","textAlign","LogInForm","logInFunction","password","formUser","setFormUser","handleSubmit","marginRight","RegisterForm","registerFunction","confirmPassword","email","SelectedForum","users","selectedForum","setSelectedForum","forumPosts","setForumPosts","padding","backgroundColor","maxHeight","SelectedProfile","selectedUser","setSelectedUser","msgState","setMsgState","userPostsList","setUserPostsList","Spinner","animation","SearchingSection","search","showingPosts","setShowingPosts","founded","setFounded","postsFoundsList","Profile","logOutFunction","setSavedPosts","shwowingSaved","setShwowingSaved","newDescription","setNewDescription","newSavedPost","handleEditingClick","handleSaveEdit","promise","minWidth","App","setForums","setUsers","getPostsService","geForumsService","icon","duration","getUserService","addPostPromise","addPostService","newPostList","deletePromise","delete","err","toString","deletePostService","updatePostService","savePromise","readyUser","savePostService","position","window","screen","reverseOrder","toastOptions","path","newForm","createFormPromise","createFormService","logOutService","logInPromise","createdAt","logInService","registerPromise","registerService","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b287d96b.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({inUser = false, inForum = false ,  isSaved, title, text, deletePost, id,  coffees, updatePost, postForum,  username, sessionUsername, savePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(isSaved)\r\n    //Handlers\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter + 1\r\n            }\r\n            updatePost(id, newPost)\r\n    }\r\n\r\n    const handleSavePost = () =>{\r\n        savePost(id, setSaveState, saveState)\r\n    }\r\n    return(\r\n            <div  className={`card post ${inForum ?  'w-100 m-2' : ''}`}>\r\n                <Link style={inUser ? {maxWidth:'none'} : {}} to={`/post/${id}`} className=\"card-body\" >\r\n                    <div className=\"card-subtitle mb-2 text-muted \">\r\n                        <h7>\r\n                            Forum:\r\n                            <Link className='postForum' to={`/Forum/${postForum}`}>\r\n                                {postForum}\r\n                            </Link>\r\n                            /Published by:\r\n                            <Link className='postUser   w-auto' to={`/Profile/${username}`}> \r\n                                <img className='mx-1 ' style={{width:'30px', borderRadius:'100px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/jdenticon/${username}.svg`}></img>\r\n                                {username}\r\n                            </Link>\r\n                        </h7>\r\n                    </div>\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div style={inUser ? {display:'none'} : {}} className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() => setOptions(prev => (!prev))}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={handleSavePost} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {isSaved\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onClick={handleAddCoffee}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n                <div className={`d-${inUser ? 'flex' : 'none'} m-2 gap-1`} >\r\n                    <Icon.CupFill style={{fontSize:'26px'}} />\r\n                    <h4 >{coffeesState.counter} </h4>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useEffect, useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport toast from 'react-hot-toast'\r\nconst PostForm = ({addPost, username, user, forums ,alredyOpen = false, clickedForum, setShowForm}) =>{\r\n    //States\r\n    useEffect( () =>{\r\n        setNewPost(prev => ({...prev, forum:clickedForum}))\r\n        setFoundedForums(forums)\r\n    }, [clickedForum,forums])\r\n    const [newPost, setNewPost] = useState({title:'', text:'', forum:clickedForum || ''})\r\n    const [isOpen, setIsOpen] = useState(alredyOpen)\r\n    const [showForumDisplay, setShowForumDisplay] = useState(false)\r\n    const [foundedForums, setFoundedForums] = useState(forums)\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.form === '') {\r\n            return [false, 'You need a forum where post!']\r\n        }\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.forum === '') return [false, 'The post needs a forum!']\r\n        else return [true, '']\r\n    }\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        console.log(newPost)\r\n        if(username){\r\n            const msg = lengthEnsureFunction()[1]\r\n            if (lengthEnsureFunction()[0]) {\r\n                addPost({...newPost, username})\r\n                setNewPost({title:'', text:''})\r\n                setIsOpen(alredyOpen)\r\n                return setShowForm ? setShowForm(false) : null\r\n            }else{\r\n                toast.error(msg)\r\n            }\r\n        }\r\n        if(!username){\r\n            toast.error('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        if (!alredyOpen) {\r\n            user ? setIsOpen(prevState => !prevState) : toast.error('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleForumChange = e =>{\r\n        let foundsList = [];\r\n        forums.forEach(forum => {\r\n        if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n            foundsList.push(forum)\r\n        }else{\r\n            return null;\r\n        }\r\n        });\r\n        setFoundedForums(foundsList)\r\n        if (foundsList.length === 0) {\r\n            setTimeout(() => setShowForumDisplay(false), 3000)\r\n        }\r\n    }\r\n    const handleForumClick = forum =>{\r\n        setShowForumDisplay(false)\r\n        setNewPost(prev => ({...prev, forum}))\r\n    }\r\n\r\n    const handleModalClick = e =>{\r\n        if (e.target.classList[0] === 'postFormModal') {\r\n            setShowForumDisplay(false)\r\n        }\r\n    }\r\n\r\n    const handleForumSelectionClick = e =>{\r\n        if (e.target.classList[0] === 'form-control') {\r\n            setShowForumDisplay(true)\r\n        }\r\n    }\r\n    console.log(user);\r\nreturn(\r\n    <form style={isOpen ? {border:'none'} : {height:'45px', border:'none', gap:'10px'}} onSubmit={handleSubmit} className='p-2 w-100 overflow-hidden mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={`${alredyOpen ? 'd-none' : ''} d-flex align-items-center justify-content-center`}\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <section  onClick={handleForumSelectionClick} className=\"mb-3 w-25\">\r\n            <input  style={{cursor:'pointer'}} value={newPost.forum} disabled placeholder='Forum' type=\"text\" className=\"form-control\" />\r\n            <section onClick={handleModalClick} className={`postFormModal ${showForumDisplay ? '' : 'd-none'}`}>\r\n                <div className='postForumModalSection'>\r\n                <input  onChange={handleForumChange}  placeholder='Search' type=\"text\" className=\"form-control\" />\r\n                <ul>\r\n                {foundedForums.map(forum => (\r\n                    <li onClick={() => handleForumClick(forum.name)}> {forum.name} </li>\r\n                    ))}\r\n                </ul>\r\n                <button type='button' onClick={_ => setShowForumDisplay(false)} className='btn btn-danger'>Cancel</button>\r\n                </div>\r\n            </section>\r\n        </section>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Posts/Post'\r\nimport PostForm from './components/Posts/PostForm'\r\nconst Home = ( {postsList, addPost, deletePost, updatePost, user, savePost, forums} ) =>{\r\n  const setSavedFunction = (postId) =>{\r\n    let state = false;\r\n    user.savedPosts.forEach(id => id === postId ? state = !state : null )\r\n    return state\r\n  }\r\n\r\n  return(\r\n      <main className='d-flex flex-row justify-content-center'>\r\n\r\n        <section className='mainSection'>\r\n          <div style={{margin:'0 auto'}} className='d-flex justify-content-center w-75'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            username={user ? user.username : false} \r\n            user={user}\r\n            forums={forums}\r\n\r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              inUser={false}\r\n              savePost={savePost}\r\n              isSaved={user ? setSavedFunction(post._id) : false}\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              postForum={post.forum}\r\n              username={post.user}\r\n              coffees={post.likes}\r\n              sessionUsername={user ? user.username : ''}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\nconst NavBar = ({postsList, user, setDisplayShow, displayShow, navBarOpen,setNavBarOpen}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                foundsList.push(post)\r\n            }else{\r\n                return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    const setLimit = list =>{\r\n        return list.slice(0, 3)\r\n    }\r\n    return(\r\n        <nav onClick={e => setNavBarOpen(e.target.id === 'searchBar')} className={`navBar ${navBarOpen ? 'navBarOpen' : ''}`}>\r\n            <Link to='/'className='gap-2 navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/' className='gap-2 navText navHomeBtn'>\r\n                                <Icon.HouseFill/>\r\n                        </Link>   \r\n                    </li>\r\n                    <li>\r\n                        <Link to='/Profile'>\r\n                            {user ?\r\n                            <div className='d-flex align-items-center gap-1'>\r\n                                <img style={{width:'30px', borderRadius:'100px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/jdenticon/${user.username}.svg?background=white`}></img>\r\n                                <h5 style={{margin:'0'}}>{user.username}</h5>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                LogIn\r\n                            </div>}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div  style={{cursor:'default'}} className=' navItem navSearch navItem'>\r\n                <input  id=\"searchBar\" placeholder='Search...' className='navItem' value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section  className='navItem searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h5>Posts</h5>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {setLimit(foundPosts).map(post=>(\r\n                                <Link to={`/post/${post._id}`} >\r\n                                    <button className='navItem navBarFounded ' \r\n                                            onClick={() => setDisplayShow(false)} \r\n                                            style={{color:'grey'}}> \r\n                                            <span className='navItem' style={{color:'white'}}>\r\n                                            {post.title}\r\n                                            </span>\r\n                                            <br/> {post.forum} - {post.user} \r\n                                    </button>\r\n                                </Link>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className=' navItem mt-2'>Nothing Found!</h6>}\r\n                    \r\n\r\n                    <Link to={`/Searching&search=${searchText}`} className='searchDisplayOthers'>See  {foundPosts.length > 3 ? 'more posts and' : ''} users here! </Link>\r\n                </section>\r\n                    <Link  className='d-flex align-items-center' to={`/Searching&search=${searchText}`}>\r\n                        <Icon.Search />\r\n                    </Link>\r\n                \r\n            </div>       \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","const Comment = ({comment}) =>{\r\n    const { msg } = comment\r\n    return( <li className=\"bg-white my-2 p-2\"> {msg} </li> )\r\n}\r\n\r\nexport default Comment","import { Link, useParams} from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nimport { postCommentService } from './services/postsServices'\r\n\r\nimport Comment from './components/Comment'\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList, sessionUsername, savePost}) =>{\r\n    const { postId, editingParam } = useParams() \r\n    \r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const [errorState, setErrorState] = useState(' ')\r\n    const [editing, setEditing] = useState(editingParam)   \r\n    const [newComment, setNewComment] = useState(\"\")\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n\r\n        const loadingToast = toast.loading('Loading...')\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id,\r\n                    username:res.data.user,\r\n                    forum:res.data.forum,\r\n                    comments:res.data.comments\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n                toast.dismiss(loadingToast)\r\n            })\r\n        \r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id,\r\n                        username:res.data.user\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                    toast.success('Edited!')\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-column align-items-center justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\" selectedPost\">\r\n            <form className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 input form-control\"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"6\" placeholder={selectedPost.text} className=\"w-75 form-control\"></textarea>\r\n                <small> {errorState} </small>\r\n            </form>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'300px', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                <div className=\"card-subtitle mb-2 text-muted \">\r\n                        <h7>\r\n                            Forum:\r\n                            <Link className='postForum' to={`/Forum/${selectedPost.forum}`}>\r\n                                {selectedPost.forum}\r\n                            </Link>\r\n                            /Published by:\r\n                            <Link className='postUser   w-auto' to={`/Profile/${selectedPost.username}`}> \r\n                                <img className='mx-1 ' style={{width:'30px', borderRadius:'100px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/jdenticon/${selectedPost.username}.svg`}></img>\r\n                                {selectedPost.username}\r\n                            </Link>\r\n                        </h7>\r\n                    </div>\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link style={selectedPost.username === sessionUsername ? {} : {display:'none'}} to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div style={selectedPost.username === sessionUsername ? {} : {display:'none'}} onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}\r\n            <div className='w-75'>\r\n                <h4>Comments:</h4>\r\n                <div className=\"bg-white p-3 rounded\">\r\n                <h6>New Comment</h6>\r\n                <input type=\"text\" value={newComment} onChange={e => setNewComment(e.target.value)} className=\"form-control\"/>\r\n                <button onClick={_ => postCommentService(selectedPost, newComment, selectedPost.comments, setSelectedPost)} className={`btn my-2 ${newComment != \"\" ? 'btn-main' : 'btn-secondary'}`}>Comment\r\n                </button>\r\n\r\n                </div>\r\n                <div>\r\n                   {selectedPost.comments && selectedPost.comments.map(comment =>(\r\n                        <Comment comment={comment} />\r\n                   ))}\r\n                </div>\r\n            </div>        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","import toast from 'react-hot-toast'\r\nimport axios from 'axios';\r\n\r\nexport const addPostService = (post, setPostsList) =>{\r\n    const addPostPromise = axios.post('/api/posts', post)\r\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\r\n    toast.promise(addPostPromise, {\r\n      loading:'Posting...',\r\n      success:'Posted!',\r\n      error:res => console.log(res)\r\n    })\r\n  };\r\n\r\n  export const deletePostService = (id, setPostsList, postsList) =>{\r\n    let newPostList = []\r\n    const deletePromise = axios.delete(`/api/posts/${id}`)\r\n      .then(res =>{\r\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\r\n        setPostsList(newPostList);\r\n      });\r\n      toast.promise(deletePromise,{\r\n        loading: 'Deleting...',\r\n        success: `Successfully deleted`,\r\n        error: (err) => `This just happened: ${err.toString()}!`,\r\n      })\r\n  }\r\n\r\n  export const updatePostService = (id, newPost,setPostsList) =>{\r\n    axios.put(`/api/posts/${id}`, newPost)\r\n      .then(res => {\r\n        if(res.data[0]){\r\n          setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data))\r\n        } \r\n        toast.success('Successfully updated!')\r\n      })\r\n    }\r\n    \r\n  export const getPostsService = setPostsList =>{\r\n    axios.get('/api/posts')\r\n    .then(res =>{\r\n      setPostsList(res.data.posts)\r\n    })\r\n  }\r\n\r\n  \r\n  export const postCommentService = (selectedPost, newComment, oldsComments, setter) =>{\r\n    if(newComment === \"\") return toast.error(\"comment something!\")\r\n    axios.put(`/api/comment/${selectedPost.id}&''`, {msg:newComment, oldsComments})\r\n    .then(res => {\r\n      if(res.data[0]) setter(prev => ({...prev, comments:res.data[1]}))\r\n    })\r\n  }\r\n","import { Link } from 'react-router-dom';\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport toast from 'react-hot-toast';\r\nimport { useState,useEffect } from 'react';\r\nconst Forum = ({forum, user, setShowForm, setClickedForum, unJoinFunction, joinFunction}) =>{\r\n    const {name, description} = forum\r\n    const [isJoined, setIsJoined] = useState(false)\r\n    const handlePostClick  = _ =>{\r\n        setShowForm(prev => !prev)\r\n        setClickedForum('name')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(user){\r\n            user.forums.forEach(forum =>{\r\n                if (forum === name) {\r\n                    setIsJoined(true)\r\n                }\r\n            })\r\n        }\r\n    }, [name, user])\r\n\r\n    const handleJoinClick  = _ =>{\r\n        joinFunction(name, setIsJoined)\r\n    }\r\n    const handleUnJoinClick  = _ =>{\r\n        unJoinFunction(name, setIsJoined)\r\n    }\r\n    return (\r\n        <Link to={`/Forum/${name}`} >\r\n            <main  className='forum'>\r\n                <h2> {name} </h2>\r\n                <p> {description} </p>\r\n            </main>\r\n            <div  className='forumBtnContainer'>\r\n            {isJoined \r\n            ?                \r\n            <Link to='/Forums' onClick={user ? handleUnJoinClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? isJoined ? 'btn-danger' : 'btn-main' : 'btn-secondary'}`}>\r\n                UnJoin\r\n                <Icon.PlayFill/>\r\n                </Link>\r\n            :     \r\n            <Link to='/Forums' onClick={user ? handleJoinClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? isJoined ? 'btn-danger' : 'btn-main' : 'btn-secondary'}`}>\r\n                Join\r\n                <Icon.Play/>\r\n            </Link>}\r\n                <Link  to='/Forums' onClick={user ? handlePostClick : () => toast.error('You need to be logged in!')} className={`btn ${user ? 'btn-main' : 'btn-secondary'}`}>\r\n                    Post \r\n                    <Icon.CursorFill/>\r\n                </Link>\r\n            </div>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default Forum;","import { useState } from \"react\"\r\nimport toast from \"react-hot-toast\"\r\n\r\nconst ForumForm = ({showModal, setShowModal, createForm, handLeModalClick}) =>{\r\n    const [newForum, setNewForum] = useState({name:'', description:''})\r\n\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newForum.name === '') {\r\n            return 'The forum needs a name!'\r\n        }\r\n        if (newForum.description === '') {\r\n            return 'The forum needs almost a simple description!'\r\n        }\r\n        if (newForum.name.split('').length > 250) {\r\n            return 'The name have a 250 characters max!'\r\n        }\r\n        if (newForum.description.split('').length > 1500) {\r\n            return 'The description have a 1500 characters max!'\r\n        }\r\n        else return ''\r\n    }\r\n\r\n\r\n    const handleCreateForum = e =>{\r\n        e.preventDefault();\r\n        const msg  = lengthEnsureFunction()\r\n        if(msg === ''){\r\n            createForm(newForum)\r\n        }else{\r\n            toast.error(msg)\r\n        }\r\n    }\r\n    const handleNameChange = e =>{setNewForum(prevState => ({...prevState, name:e.target.value}))}\r\n    const handleDescriptionChange = e =>{setNewForum(prevState => ({...prevState, description:e.target.value}))}\r\n    return(\r\n        <main onClick={handLeModalClick} style={showModal ? {} : {display:'none'}} className='forumFormModal'>\r\n            <form  onSubmit={handleCreateForum} style={{margin:'0 auto'}} className='forumForm'>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input placeholder='Name' value={newForum.name} onChange={handleNameChange} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Description</label>\r\n                    <textarea placeholder='Description' value={newForum.description} onChange={handleDescriptionChange} className=\"form-control\" rows='4'/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-main\">Create</button>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ForumForm;","import * as Icon from 'react-bootstrap-icons'\r\nimport { useEffect, useState } from 'react';\r\n//Components =>\r\nimport Forum from './Forum'\r\nimport ForumForm from './ForumForm';\r\nimport toast from 'react-hot-toast'\r\nimport PostForm from '../Posts/PostForm'\r\nimport axios from 'axios';\r\n//Components <=\r\n\r\nconst Forums = ({ forums, createForm, showModal, setShowModal, user, addPost, setUser }) =>{\r\n    const [searchedForum, setSearchedForum] = useState('')\r\n    const [foundForums, setFoundForums] = useState(forums)\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [clickedForum, setClickedForum] = useState('')\r\n    useEffect(()=>{\r\n        setFoundForums(forums)\r\n    }, [forums])\r\n\r\n    const handleSearchChange = e =>{\r\n        setSearchedForum(e.target.value)\r\n        if (e.target.value !== '') {\r\n            let foundsList = [];\r\n            forums.forEach(forum => {\r\n                if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                    foundsList.push(forum)\r\n                }\r\n            });\r\n            setFoundForums(foundsList)\r\n        }\r\n        else{\r\n            setFoundForums(forums)\r\n        }\r\n    }\r\n    const joinFunction = (forum, setter) =>{\r\n        axios.put(`/api/users/${user.id}`, {forums:[...user.forums, forum]})\r\n        .then(res => {\r\n            if(res.data.state){\r\n                setter(true)\r\n                setUser(res.data.newUser)\r\n            }\r\n        })\r\n    }\r\n\r\n    const unJoinFunction = (forum, setter) =>{\r\n        let forums = user.forums\r\n        console.log(forums)\r\n        forums.splice(user.forums.indexOf(forum), 1);\r\n        console.log(forums)\r\n        axios.put(`/api/users/${user.id}`, {forums})\r\n        .then(res => setter(false))\r\n    }\r\n\r\n    const handleCreateFormClick = () =>{\r\n        user \r\n        ? setShowModal(prev => !prev)\r\n        : toast.error('You need to be logged in')\r\n    }\r\n    const handLeModalClick = e =>{\r\n        if (e.target.classList[0] === 'forumFormModal') {\r\n            setShowModal(false)\r\n            setShowForm(false)\r\n        }\r\n    }\r\n    return(\r\n        <main >\r\n            <section onClick={handLeModalClick} className={`forumFormModal ${showForm ? null :'d-none'} `}>\r\n                <PostForm \r\n                    username={user ? user.username : false} \r\n                    user={user}\r\n                    forums={forums}\r\n                    alredyOpen={true}\r\n                    clickedForum={clickedForum}\r\n                    addPost={addPost}\r\n                    setShowForm={setShowForm}\r\n                />\r\n            </section>\r\n                <ForumForm  \r\n                    handLeModalClick={handLeModalClick} \r\n                    user={user} \r\n                    createForm={createForm} \r\n                    showModal={showModal} \r\n                    setShowModal={setShowModal} \r\n                />\r\n            <button onClick={handleCreateFormClick} className={`btn ${showForm ? 'd-none' : ''} ${showModal ? 'btn-danger' : 'btn-forum'} mt-1 mx-2 position-fixed`}>\r\n                {showModal ? 'Cancel' : 'Create Forum'}\r\n            </button>\r\n            <button onClick={_ => setShowForm(false)} className={`btn ${showForm ?  '' : 'd-none'} btn-danger mt-1 mx-2 position-fixed`}>\r\n                Cancel\r\n            </button>\r\n            <h2 style={{textAlign:'center'}}> Search for Forums </h2>\r\n                <div className='forumSearchBar  d-flex align-items-center justify-content-center gap-2'>\r\n                    <Icon.Search/>\r\n                    <input onChange={handleSearchChange} value={searchedForum} placeholder='Just type...' type='text'></input>\r\n                </div>\r\n            <h4 className='mt-3 mb-2' style={{textAlign:'center'}}> {`${foundForums.length} ${foundForums.length !== 1 ? 'Forums' : 'Forum'}`} </h4>\r\n            {/* <ForumForm /> */}\r\n            <ul className='forumsContainer'>\r\n                {foundForums.map(forum =>{\r\n                    return (\r\n                        <div onClick={_=> setClickedForum(forum.name)} key={forum.name}>\r\n                           <Forum \r\n                           setClickedForum={setClickedForum} \r\n                           user={user} \r\n                           key={forum.name} \r\n                           forum={forum} \r\n                           setShowForm={setShowForm} \r\n                           unJoinFunction={unJoinFunction}\r\n                           joinFunction={joinFunction}\r\n                           />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Forums;","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LogInForm = ({logInFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Renders\r\n    const renderLogInForm = () =>{\r\n        return(\r\n            <form onSubmit={handleSubmit}  className='logInForm'>\r\n                <h3>Log In</h3>\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                    value={formUser.username} \r\n                    type=\"text\" className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))}\r\n                    value={formUser.password} \r\n                     type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                     />\r\n                </div>\r\n                <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-main \">Log In</button>\r\n                <Link to='/Register'>You don´t have an account?</Link>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            logInFunction(formUser)\r\n        }\r\n    }\r\n    return user ? <Redirect to='/Home'/> : renderLogInForm();\r\n}\r\n\r\nexport default LogInForm;\r\n","import { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { Link } from 'react-router-dom';\r\nconst RegisterForm = ({registerFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:'', confirmPassword:'', email:''})\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if (formUser.password !== formUser.confirmPassword) return toast.error(\"Confirm your password\")\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            registerFunction(formUser)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className='logInForm'>\r\n            <h3>Register</h3>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Username</label>\r\n                <input\r\n                onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                value={formUser.username} \r\n                type=\"text\" className=\"form-control\" />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label   className=\"form-label\">Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))} \r\n                value={formUser.password} \r\n                type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n                <label   className=\"form-label\">Confirm Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, confirmPassword:e.target.value}))} \r\n                value={formUser.confirmPassword} \r\n                type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n\r\n\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-main\">Register</button>\r\n            <Link to='/LogIn'>You alredy have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport Post from '../Posts/Post'\r\nimport PostForm from '../Posts/PostForm'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nconst SelectedForum = ({user, setUser, forums}) =>{\r\n    const { forum } = useParams();\r\n    const [selectedForum, setSelectedForum] = useState({name:'', description:'', users:[]})\r\n    const [forumPosts, setForumPosts] = useState([])\r\n    const [isJoined, setIsJoined] = useState(false)\r\n    useEffect(() =>{\r\n        axios.get(`/api/forums/${forum}`)\r\n            .then(res =>{\r\n                res.data.name\r\n                ? setSelectedForum(res.data)\r\n                : <Redirect to='/Home' />\r\n            })\r\n        axios.get(`/api/forum=${forum}/posts`)\r\n            .then(res =>{\r\n                setForumPosts(res.data.postsList)\r\n            })\r\n        if(user){\r\n            user.forums.forEach(forum =>{\r\n                if (forum === selectedForum.name) setIsJoined(true) \r\n        })\r\n        }\r\n    }, [forum, user])\r\n\r\n    const joinFunction = (forum) =>{\r\n        axios.put(`/api/users/${user.username}`, {forums:[...user.forums, forum]})\r\n        .then(res => {\r\n            if(res.data.state){\r\n                setIsJoined(true)\r\n                setUser(res.data.newUser)\r\n            }\r\n        })\r\n    }\r\n\r\n    const unJoinFunction = (forum) =>{\r\n        let forums = user.forums\r\n        console.log(forums)\r\n        forums.splice(user.forums.indexOf(forum), 1);\r\n        console.log(forums)\r\n        axios.put(`/api/users/${user.id}`, {forums})\r\n        .then(res => setIsJoined(false))\r\n    }\r\n\r\n    const {name, description, users} = selectedForum\r\n\r\n    const handleJoinClick = _ =>{\r\n        isJoined\r\n        ? user && unJoinFunction(name, isJoined, user, setUser) \r\n        : user && joinFunction()\r\n    }\r\n    return(\r\n        <main className='selectedForum'>\r\n            <section className='selectedForumInfo'>\r\n                <div className='d-flex gap-2 p-1'>\r\n                    <h2  className='d-inline-block p-0'>{name}</h2> \r\n                    <button onClick={handleJoinClick} className={`btn btn-${isJoined ? 'danger' : 'main'} d-flex align-items-center gap-1`}>\r\n                    {isJoined ? 'UnJoin' : 'Join'}\r\n                    {isJoined ? <Icon.PlayFill/> : <Icon.Play/>}\r\n                    </button> \r\n                </div>\r\n                <ul>\r\n                    {users.map(user => <h3> user </h3>)}\r\n                </ul>\r\n            </section>\r\n            <section style={{margin:'0 auto'}} className='selectedForumContent d-flex justify-content-between'>\r\n                <article className='w-75'>\r\n                    <div style={{padding:'-50px'}} className='mx-3 d-flex justify-content-center'>\r\n                        <PostForm \r\n                            user={user} \r\n                            forums={forums} \r\n                            clickedForum={forum}\r\n                        />\r\n                    </div>\r\n                        {forumPosts.length > 0 \r\n                    ? \r\n                    <ul className='w-100' >\r\n                        {forumPosts.map(post => (\r\n                            <div className='d-flex justify-content-center '>\r\n                                <Post\r\n                                key={post._id}\r\n                                title={post.title}\r\n                                text={post.text}\r\n                                id={post._id}\r\n                                username={post.user}\r\n                                coffees={post.likes}\r\n                                postForum={post.forum}\r\n                                inForum={true}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                    : <h2  style={{textAlign:'center'}}>Any post</h2>}\r\n                </article>\r\n                <article className='card my-2 p-2 w-25' style={{backgroundColor:'white', maxHeight:'200px'}}> \r\n                    <h5 className=''>About the forum:</h5>\r\n                    <span className='overflow-auto'>\r\n                    {description}\r\n                    </span>\r\n                </article>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedForum;","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Post from '../Posts/Post'\r\nimport axios from 'axios';\r\nimport * as Icon from 'react-bootstrap-icons'\r\n\r\nconst SelectedProfile = _ =>{\r\n    const { user } = useParams();\r\n    const [selectedUser, setSelectedUser] = useState(null)\r\n    const [msgState, setMsgState] = useState(false)\r\n    const [userPostsList, setUserPostsList] = useState([])\r\n    useEffect(() =>{\r\n        axios.get(`/api/user/${user}`)\r\n            .then(res => setSelectedUser(res.data));\r\n        axios.get(`/api/user=${user}/posts`)\r\n        .then(res => {\r\n            setUserPostsList(res.data.postsList)\r\n        })\r\n    }, [user])\r\n    \r\n    const renderNoPost = () =>{\r\n        setTimeout(() => {setMsgState(false)}, 2000)\r\n        return(\r\n            msgState ? <Spinner className='mt-5' animation='border'></Spinner> : <h5>Any posts...</h5>\r\n        )\r\n    }\r\n\r\n    const renderSelectedUser = _ =>{\r\n        return(\r\n            <div style={{width:'100vw', margin:'0 auto'}} className='profileSection'>\r\n            {userPostsList.length !== 0\r\n            ?                \r\n            <ul className='userPosts'>\r\n                {userPostsList.map(post =>(\r\n                    <Post\r\n                    inUser={true}\r\n                    key={post._id}\r\n                    title={post.title}\r\n                    text={post.text}\r\n                    id={post._id}\r\n                    username={post.user}\r\n                    coffees={post.likes}\r\n                    sessionUsername={user ? user.username : ''}\r\n                />\r\n                ))}\r\n            </ul> \r\n            : renderNoPost()\r\n            }\r\n            <section className='userInfo'>\r\n            <div className='d-flex flex-column align-items-center'>\r\n                        <img style={{width:'100px', border:'3px solid var(--main-color)', borderRadius:'30px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/jdenticon/${selectedUser.username}.svg`}></img>\r\n                        <h3> \r\n                            {selectedUser.username} \r\n                        </h3>\r\n                    </div> \r\n                <h6>Description:</h6>\r\n                <textarea disabled className='form-control' ></textarea>\r\n                <h3>Forums:</h3>\r\n                    <div style={{height:'45%'}}  className=' d-flex flex-column overflow-auto'>\r\n                        {selectedUser.forums && selectedUser.forums.length > 0 \r\n                        ? selectedUser.forums.map(forum => (\r\n                        <Link className='my-1 mx-3 d-flex alig-items-center card px-3 py-2' to={`/Forum/${forum}`}>\r\n                            <h4>{forum}</h4>\r\n                            <button className='btn btn-main'>Join <Icon.Play/> </button>\r\n                        </Link>))\r\n                        : <h3 style={{textAlign:'center'}}> Any forum </h3>}\r\n                    </div>\r\n            </section>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        selectedUser ? renderSelectedUser() : <h2 style={{textAlign:'center'}}> There is no user!</h2>\r\n    )\r\n}\r\n\r\nexport default SelectedProfile;","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Post from './Posts/Post'\r\nimport {Link} from 'react-router-dom'\r\nconst SearchingSection = ({postsList, users}) =>{\r\n    const { search }  = useParams()\r\n    const [showingPosts, setShowingPosts] = useState(true)\r\n    const [founded, setFounded] = useState({posts:[], users:[]})\r\n\r\n\r\n    useEffect(() => {\r\n        let postsFoundsList = [];\r\n        let usersFoundsList = [];\r\n        postsList.forEach(post => {\r\n            console.log(post.title.toLowerCase().includes(search.toLowerCase()) && postsFoundsList.push(post))\r\n            post.title.toLowerCase().includes(search.toLowerCase()) && postsFoundsList.push(post)\r\n        });\r\n        users.forEach(user => {\r\n            console.log(user.username.toLowerCase().includes(search.toLowerCase()))\r\n            user.username.toLowerCase().includes(search.toLowerCase()) && postsFoundsList.push(user)\r\n        });\r\n        setFounded({posts:postsFoundsList, users:usersFoundsList})\r\n    }, [search, postsList, users])\r\n\r\n    return(\r\n        <main> \r\n            <div className='bg-white p-2'>\r\n                <h3>{search}</h3>\r\n                <h6>Founded posts and users:</h6>\r\n            </div>\r\n            <div className='d-flex gap-2 p-2'>\r\n                <button onClick={() => setShowingPosts(true)} className={`btn btn-second${showingPosts ? '' : 'ary'}`}>Posts</button>\r\n                <button onClick={() => setShowingPosts(false)} className={`btn btn-second${!showingPosts ? '' : 'ary'}`} >Users</button>\r\n            </div>\r\n            <div className='d-flex'>\r\n                <section style={showingPosts ? {}  : {display:'none'}} className='w-100 mx-3' >\r\n                    <h4>Posts:</h4>\r\n                    <ul style={{margin:'0 auto'}} className='m-0 p-0 d-flex flex-column align-items-center'>\r\n                        {founded.posts.map( post =>(\r\n                            <Post \r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            id={post._id}\r\n                            postForum={post.forum}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            />\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n\r\n                <section className='w-100 mx-3' style={!showingPosts ? {}  : {display:'none'}}>\r\n                    <h4>Users:</h4>\r\n                    <ul style={{margin:'0 auto'}} className='m-0 p-0 d-flex flex-row gap-3 align-items-center'>\r\n                    {founded.users.map(user => \r\n                        <Link style={{width:'150px'}} className='bg-white  card d-flex align-items-center p-1 gap-1'>\r\n                            <img style={{width:'45px', border:'3px solid var(--main-color)', borderRadius:'30px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/jdenticon/${user.username}.svg`}></img>\r\n                            {user.username} \r\n                        </Link> )}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default SearchingSection;","import { useEffect, useState } from 'react';\r\nimport { Redirect} from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Post from '../Posts/Post'\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Profile = ({user, logOutFunction}) =>{\r\n    const [userPostsList, setUserPostsList] = useState([])\r\n    const [msgState, setMsgState] = useState(true)\r\n    const [savedPosts, setSavedPosts] = useState(user ? user.savedPosts : [])\r\n    const [shwowingSaved, setShwowingSaved] = useState(false)\r\n    const [newDescription, setNewDescription] = useState({description:user ? user.description : '', editing:false})\r\n\r\n    useEffect(() =>{\r\n        if (user){\r\n            axios.get(`/api/user=${user.username}/posts`)\r\n            .then(res => {\r\n                setUserPostsList(res.data.postsList)\r\n                })\r\n            let newSavedPost = []\r\n            savedPosts.forEach(postId => {\r\n                axios.get(`/api/posts/${postId}`)\r\n                .then(res => {\r\n                    newSavedPost.push(res.data);\r\n                })\r\n            });\r\n            setSavedPosts(newSavedPost)\r\n        }\r\n    }, [user])\r\n\r\n    const renderNoPost = () =>{\r\n        setTimeout(() => {setMsgState(false)}, 2000)\r\n        return(\r\n            msgState ? <Spinner className='mt-5' animation='border'></Spinner> : <h3 style={{textAlign:'center'}}>Any Post Yet</h3>\r\n        )\r\n    }\r\n\r\n    const handleEditingClick = _ =>{\r\n        setNewDescription(prev => ({...prev, editing:!prev.editing}))\r\n    }\r\n\r\n    const handleSaveEdit = _ =>{\r\n        if (user.description === newDescription.description) toast.error('No change made')\r\n        else if (newDescription.description.length > 550){\r\n            toast.error('The description have a 550 max!')\r\n        }else{\r\n            let promise = axios.put(`/api/users/${user.id}`, {description:newDescription.description})\r\n                .then(res =>{\r\n                    setNewDescription(prev => ({...prev, editing:false}))\r\n                })\r\n            toast.promise(promise, {\r\n                loading:'Updating...',\r\n                success:'Edited!',\r\n                error:'Error!'\r\n            })\r\n        }\r\n    }\r\n\r\n    const renderProfileSection = () =>{\r\n        return (\r\n            <div style={{width:'100vw', margin:'0 auto'}} className='profileSection'>\r\n                <ul className='userPosts'>\r\n                    <button style={{color:'white'}} onClick={_ => shwowingSaved && setShwowingSaved(false)} className={`btn btn-second${!shwowingSaved ? '' : 'ary'} my-2 mx-1`}>Your Posts</button>\r\n                    <button onClick={_ => shwowingSaved || setShwowingSaved(true)} className={`btn btn-second${shwowingSaved ? '' : 'ary'} my-2 mx-1`}>Saved Posts</button>\r\n                    {shwowingSaved \r\n                    ? savedPosts[0] \r\n                        ? savedPosts.map(post =>(\r\n                            <Post\r\n                            inUser={true}\r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            id={post._id}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            postForum={post.forum}\r\n                            sessionUsername={user ? user.username : ''}\r\n                        />\r\n                        )) \r\n                        : <h3 style={{textAlign:'center'}}>Any Saved Post Yet</h3>\r\n                    : userPostsList.length > 0 \r\n                        ? userPostsList.map(post =>(\r\n                            <Post\r\n                            inUser={true}\r\n                            key={post._id}\r\n                            title={post.title}\r\n                            text={post.text}\r\n                            postForum={post.forum}\r\n                            id={post._id}\r\n                            username={post.user}\r\n                            coffees={post.likes}\r\n                            sessionUsername={user ? user.username : ''}\r\n                            />\r\n                        ))\r\n                        : renderNoPost()}\r\n\r\n                </ul> \r\n                <section className='userInfo'>\r\n                    <div className='d-flex flex-column align-items-center'>\r\n                        <img style={{width:'100px'}} alt='user-avatar' src={`https://avatars.dicebear.com/api/big-smile/${user.username}.svg`}></img>\r\n                        <h3> \r\n                            {user.username} \r\n                        </h3>\r\n                    </div> \r\n                    <div className='descriptionSection'>\r\n                        <textarea disabled={!newDescription.editing} onChange={e => setNewDescription(prev => ({...prev, description:e.target.value}))} value={newDescription.description} className='form-control' placeholder='Description'></textarea>\r\n                        <div style={{minWidth:'50px', width:'25%'}}>\r\n                            {newDescription.editing \r\n                            ? <div>\r\n                                <button onClick={handleSaveEdit}>\r\n                                    <Icon.CheckLg/>\r\n                                </button>\r\n                                <button onClick={handleEditingClick}>\r\n                                    <Icon.XLg/>\r\n                                </button>\r\n                            </div> \r\n                            : <button onClick={handleEditingClick}>\r\n                                <Icon.PencilFill/>\r\n                            </button>}\r\n                        </div>\r\n                    </div>\r\n                        <h3>Forums:</h3>\r\n                    <div style={{height:'45%'}} className=' d-flex flex-column overflow-auto'>\r\n                        {user.forums && user.forums.length > 0 \r\n                        ? user.forums.map(forum => <Link className='my-1 mx-3 d-flex alig-items-center card px-3 py-2' to={`/Forum/${forum}`}> <h4>{forum}</h4> </Link>)\r\n                        : <h3 style={{textAlign:'center'}}> Any forum </h3>}\r\n                    </div>\r\n                <button onClick={logOutFunction} className='btn-danger p-2 position-absolute' style={{borderRadius:'10px',  width:'100px'}}> <Icon.DoorClosed/> LogOut</button>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return user ? renderProfileSection() : <Redirect to='/LogIn' />\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport * as Icon from 'react-bootstrap-icons';\n//Components =>\n//Toaster\nimport { Toaster } from 'react-hot-toast';\nimport Home from './Home'\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\nimport Forums from './components/Forums/Forums'\nimport LogInForm from './components/Users/LogInForm'\nimport RegisterForm from './components/Users/RegisterForm'\nimport SelectedForum from './components/Forums/SelectedForum';\nimport SelectedProfile from './components/Users/SelectedProfile'\nimport SearchingSection from './components/SearchingSection';\nimport Profile from './components/Users/Profile';\n//Components <=\n\n//Services =>\nimport { addPostService, updatePostService, deletePostService, getPostsService } from './services/postsServices'\nimport { logInService, registerService, logOutService, savePostService, getUserService } from './services/userServices'\nimport { createFormService, geForumsService } from './services/forumsServices';\n//Services <=\n\n\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n//ROutes <=\nconst App = () => {\n  const [forums, setForums] = useState([])\n  const [postsList, setPostsList] = useState([])\n  const [users, setUsers] = useState([])\n\n  //User Session\n  const [user, setUser] = useState(null)\n  const [navBarOpen, setNavBarOpen] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  useEffect( () =>{\n    //Fetch de los posts\n    getPostsService(setPostsList)\n    //Fetch de los forums\n    geForumsService(setForums)\n    //Fetch del usuario y de los usuarios\n    getUserService(setUser, setUsers)\n  }, [])\n\n  //Post functions =>\n  const addPost = (post) => addPostService(post, setPostsList)\n  const deletePost = (id) => deletePostService(id, setPostsList, postsList)\n  const updatePost = (id, newPost) => updatePostService(id, newPost, setPostsList)\n  //Post functions <=\n  \n  //User functions =>\n  const logInFunction = (user) => logInService(user, setUser)  \n  const registerFunction = (user) => registerService(user, setUser)\n  const logOutFunction = _ => logOutService(setUser)\n  const savePost = (postId, setSaveState, saveState) => savePostService(postId, setSaveState, saveState, user, setUser)\n  //User functions <=\n  \n  //Forums functions =>\n  const createForm = newForm => createFormService(newForm, setForums, setShowModal)\n  //Forums functions <=\n  \n  //NavBarSearchSection =>\n  const [displayShow, setDisplayShow] = useState(false)\n  const handleClick = e =>{\n    if (e.target.classList[0] !== 'navItem') {\n      setDisplayShow(false)\n    }\n  }\n  //NavBarSearchSection <=\n\n  const activeResponsive = () =>{\n    setNavBarOpen(prev => !prev)\n  }\n\n  return (\n    <Router>\n    <div onClick={handleClick} className='main'>\n      <Toaster \n       position={window.screen.width > 600 ? \"bottom-right\" : \"top-center\"}\n       reverseOrder={false}\n       toastOptions={{\n          className:'toast'\n      }}\n       />\n      <div className='navBarResponsiveBtn'>\n        <button onClick={window.window < 600 ? {} : () =>{ activeResponsive() }}>\n          {navBarOpen ? <Icon.X/> : <Icon.List/>}\n        </button>\n        <button className='gap-2 navText' >\n          <Icon.CupFill/>\n          CoffeePosts\n        </button>\n      </div>\n      <NavBar\n      setNavBarOpen={setNavBarOpen}\n      navBarOpen={navBarOpen}\n      postsList={postsList}\n      user={user}\n      setDisplayShow={setDisplayShow}\n      displayShow={displayShow}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n\n        <Route path=\"/Searching&search=:search\">\n          <SearchingSection \n          users={users}\n          postsList={postsList}\n                      />\n        </Route>\n\n        <Route path=\"/Post/:postId&:editingParam\">\n            <SelectedPost \n              sessionUsername={user ? user.username : ''} \n              addPost={addPost}\n              savePost={savePost}\n              deletePost={deletePost} \n              updatePost={updatePost}\n              user={user}\n              setPostsList={setPostsList}\n              />\n        </Route>\n\n        <Route path=\"/Post/:postId\">\n            <SelectedPost \n              sessionUsername={user ? user.username : ''} \n              addPost={addPost}\n              savePost={savePost}\n              setPostsList={setPostsList}\n              deletePost={deletePost} \n              updatePost={updatePost}\n              />\n        </Route>\n\n        <Route path=\"/Forums\">\n          <Forums \n          setUser={setUser} \n          addPost={addPost} \n          user={user} \n          forums={forums} \n          createForm={createForm} \n          showModal={showModal} \n          setShowModal={setShowModal} \n          />\n        </Route>\n\n        <Route path=\"/Forum/:forum\">\n          <SelectedForum user={user}  setUser={setUser} forums={forums} />\n        </Route>\n\n        <Route path=\"/Profile/:user\">\n          <SelectedProfile />\n        </Route>\n\n        <Route path=\"/Profile\">\n          <Profile\n          logOutFunction={logOutFunction}\n          user={user} \n          />\n        </Route>\n\n        <Route path=\"/LogIn\">\n        <LogInForm \n          logInFunction={logInFunction}\n          user={user}\n            />\n        </Route>\n\n        <Route path=\"/Register\">\n        <RegisterForm \n        registerFunction={registerFunction}\n        user={user}\n            />\n        </Route>\n\n        <Route path=\"/Home\">\n        <Home \n            user={user} \n            postsList={postsList}\n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            savePost={savePost}\n            forums={forums.length > 0 ? forums : []}\n            />\n        </Route>\n\n        <Route path='/:noFound'>\n          {() =>{\n            return(<h3 style={{textAlign:'center'}}>404 Page Not Found</h3>)\n          }}\n        </Route>\n\n        <Route path=\"/\">\n          <Redirect to='/Home'/>\n        </Route>\n\n      </Switch>\n    </div>\n  </Router>\n  );\n}\nexport default App;\n","import toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nexport const createFormService = (newForm, setForums, setShowModal) =>{\r\n    const createFormPromise = axios.post('/api/forums', newForm)\r\n    .then(res => {\r\n      if(res.data) {\r\n        setForums(prev => [...prev, res.data[1]])\r\n        setShowModal(false)  \r\n      }\r\n    })\r\n    toast.promise(createFormPromise, {\r\n      loading:'Creating form...',\r\n      success:'Forum created!',\r\n      error:'The forum alredy exist!'\r\n    })\r\n  }\r\n\r\nexport const geForumsService = setForums =>{\r\n  axios.get('/api/forums')\r\n  .then(res => {\r\n    setForums(res.data.forums)\r\n  })\r\n}\r\n\r\nexport const joinFunction = (forum, setter, user, setUser) =>{\r\n  axios.put(`/api/users/${user.id}`, {forums:[...user.forums, forum]})\r\n  .then(res => {\r\n      if(res.data.state){\r\n          setter(true)\r\n          setUser(res.data.newUser)\r\n      }\r\n  })\r\n}\r\n\r\nexport const unJoinFunction = (forum, setter, user) =>{\r\n  let forums = user.forums\r\n  console.log(forums)\r\n  forums.splice(user.forums.indexOf(forum), 1);\r\n  console.log(forums)\r\n  axios.put(`/api/users/${user.id}`, {forums})\r\n  .then(res => setter(false))\r\n}","import toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\n\r\nexport const logInService = (user, setUser) =>{\r\n    const logInPromise = axios.post('api/login', user)\r\n    .then(res => {\r\n      const [state, user] = res.data\r\n      const {username, _id, createdAt, savedPosts, forums} = user\r\n      const userWrongFunction = () =>{\r\n        setUser(null);\r\n        toast.error('Username or Password wrong!')\r\n      }\r\n      state \r\n        ? setUser({username, id:_id, createdAt, savedPosts, forums})\r\n        : userWrongFunction()\r\n    })\r\n  //Toast\r\n  toast.promise(logInPromise, {\r\n    loading:'Login in...',\r\n    error: 'User or Password are wrong!',\r\n    success: 'Logged!'\r\n  })\r\n}\r\n\r\nexport const registerService = (user, setUser) =>{\r\n    if (user.username !== '' && user.password !== '') {\r\n      const registerPromise = axios.post('api/register', user)\r\n      .then(res => {\r\n        setUser(res.data[1])\r\n      })\r\n      //Toast\r\n      toast.promise(registerPromise, {\r\n        loading:'Registering...',\r\n        success:`User Created!`,\r\n        error:res => res.toString()\r\n      })\r\n    }\r\n  }\r\n\r\nexport const logOutService = (setUser) =>{\r\n    axios.get('/api/logout')\r\n      .then(() => {\r\n        setUser(null)\r\n        toast('Logged Out!', {icon:'👌'});\r\n      })\r\n  }\r\nexport const savePostService = (postId, setSaveState, saveState, user, setUser) =>{\r\n    if (user) {\r\n      const savePromise = axios.put(`/api/users/${user ? user.id : 'none'}`, {postId, savedPosts:user.savedPosts})\r\n        .then(res => {\r\n          setSaveState(prevState => !prevState)\r\n          setUser(prev => ({...prev, savedPosts:res.data.readyUser.savedPosts}))\r\n        })\r\n          toast.promise(savePromise, {\r\n            loading:'Saving...',\r\n            success:`Succesfyllu ${saveState ? 'UnSaved' : 'Saved'}`,\r\n            error:res => `Error while saving: ${res.data}`\r\n          })\r\n        }else{\r\n        toast.error('You are not logged in...')\r\n      }\r\n}\r\n\r\nexport const getUserService = (setUser, setUsers) =>{\r\n  axios.get('/api/users')\r\n  .then(res =>{\r\n    setUsers(res.data)\r\n  })\r\n  axios.get('/api/user')\r\n  .then(res =>{\r\n    if (!res.data.msg) {\r\n      setUser(res.data)\r\n      console.log(res.data)\r\n      toast.success(`Welcome back ${res.data.username}!`, {icon:'👋',duration:1500})\r\n    }else{\r\n      return null;\r\n    }\r\n  })\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}