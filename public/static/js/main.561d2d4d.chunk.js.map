{"version":3,"sources":["components/Post.js","components/PostForm.js","Home.js","components/NavBar.js","SelectedPost.js","components/Forum.js","components/ForumForm.js","components/Forums.js","components/LogInForm.js","components/RegisterForm.js","components/SelectedForum.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Post","title","text","deletePost","id","coffees","updatePost","username","sessionUsername","savePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","className","to","onClick","prev","style","opacity","transition","visibility","display","onMouseLeave","newPost","likes","prevState","PostForm","addPost","forum","setNewPost","isOpen","setIsOpen","lengthEnsureFunction","split","length","height","onSubmit","e","preventDefault","msg","toast","error","fontSize","marginBottom","cursor","margin","userSelect","width","type","onChange","target","value","placeholder","rows","Home","postsList","user","map","post","_id","NavBar","setDisplayShow","displayShow","navBarOpen","setNavBarOpen","searchText","setSearchText","foundPosts","setFoundPosts","foundsList","forEach","toLowerCase","includes","push","array","newArray","item","indexOf","putLimit","color","SelectedPost","setPostsList","selectedPost","setSelectedPost","original","actual","setCoffees","useParams","postId","editingParam","editing","setEditing","errorState","setErrorState","useEffect","loadingToast","loading","axios","get","then","res","newSelectedPost","data","dismiss","flexDirection","transform","updatedPost","put","success","posts","Forum","name","description","ForumForm","showModal","setShowModal","createForm","newForum","setNewForum","classList","Forums","forums","searchedForum","setSearchedForum","foundForums","setFoundForums","textAlign","LogInForm","logInFunction","password","formUser","setFormUser","handleSubmit","marginRight","RegisterForm","registerFunction","SelectedForum","props","users","selectedForum","setSelectedForum","console","log","Profile","logOutFunction","App","setForums","setUser","duration","addPostPromise","promise","newPostList","deletePromise","delete","err","toString","updatePostPromise","position","reverseOrder","window","path","newForm","createFormPromise","icon","logInPromise","createdAt","savedPosts","registerPromise","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561d2d4d.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({title, text, deletePost, id,  coffees, updatePost, username, sessionUsername, savePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(false)\r\n    //Handlers\r\n\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        if (coffees !== coffeesState.counter) {\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter\r\n            }\r\n            updatePost(id, newPost)\r\n        }\r\n    }\r\n\r\n    const handleSavePost = () =>{\r\n        savePost(id)\r\n    }\r\n    return(\r\n            <div  className=\"card post \">\r\n                <Link to={`post/${id}`} className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - {username}</h6>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() => setOptions(prev => (!prev))}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={handleSavePost} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {saveState\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li style={username === sessionUsername ? {} : {display:'none'}}>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onMouseLeave={handleAddCoffee} \r\n                    onClick={() => setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport toast from 'react-hot-toast'\r\nconst PostForm = ({addPost, username}) =>{\r\n    //States\r\n    const [newPost, setNewPost] = useState({title:'', text:'', forum:''})\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(username){\r\n            const msg = lengthEnsureFunction()[1]\r\n            if (lengthEnsureFunction()[0]) {\r\n                addPost({title:newPost.title, text:newPost.text, username})\r\n                setNewPost({title:'', text:''})\r\n                setIsOpen(false)\r\n            }else{\r\n                toast.error(msg)\r\n            }\r\n        }\r\n        if(!username){\r\n            toast.error('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        setIsOpen(prevState => !prevState)\r\n    }\r\nreturn(\r\n    <form style={isOpen ? {} : {height:'45px'}} onSubmit={handleSubmit} className='p-2 overflow-hidden w-75 mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={isOpen\r\n            ?'closeForm d-flex align-items-center justify-content-center' \r\n            :'openForm d-flex align-items-center justify-content-center'\r\n            }\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Post'\r\nimport PostForm from './components/PostForm'\r\nconst Home = ( {postsList, addPost, deletePost, updatePost, user, savePost} ) =>{\r\n  return(\r\n      <main className='d-flex flex-row justify-content-center'>\r\n\r\n        <section className='mainSection'>\r\n          <div className='d-flex justify-content-center w-100'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            username={user ? user.username : false} \r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              savePost={savePost}\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              username={post.user}\r\n              coffees={post.likes}\r\n              sessionUsername={user ? user.username : ''}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = ({postsList, user, setDisplayShow, displayShow, navBarOpen,setNavBarOpen}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                foundsList.push(post)\r\n            }else{\r\n                return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    const putLimit = (array) =>{\r\n        let newArray = []\r\n        array.forEach(item =>{\r\n            if (array.indexOf(item) < 3) {\r\n                newArray.push(item)\r\n            }\r\n        })\r\n        return newArray;\r\n    } \r\n    return(\r\n        <nav onClick={() => setNavBarOpen(false)} className={`navBar ${navBarOpen ? 'navBarOpen' : ''}`}>\r\n            <Link to='/' className='gap-2 navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n            <Link to='/' className='gap-2 navText navHomeBtn'>\r\n                <Icon.HouseFill/>\r\n                Home\r\n            </Link>   \r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <Link to='/Profile'>\r\n                            {user ?\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                {user.username}\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                LogIn\r\n                            </div>}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=' navItem navSearch navItem'>\r\n                <Icon.Search/>\r\n                <input className='navItem' value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section className='navItem searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h5>Posts</h5>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {putLimit(foundPosts).map(post=>(\r\n                                <Link to={`/post/${post._id}`} >\r\n                            <button className='navItem navBarFounded ' \r\n                                    onClick={() => setDisplayShow(false)} \r\n                                    \r\n                                    style={{color:'grey'}}> \r\n                                    <span className='navItem' style={{color:'white'}}>\r\n                                    {post.title}\r\n                                    </span>\r\n                                    <br/> Bard-main / {post.user} \r\n                            </button>\r\n                                </Link>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className=' navItem mt-2'>Nothing Found!</h6>}\r\n\r\n                </section>\r\n                \r\n            </div>       \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","import { Link, useParams} from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList}) =>{\r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const { postId, editingParam } = useParams() \r\n    const [editing, setEditing] = useState(editingParam)   \r\n    const [errorState, setErrorState] = useState(' ')\r\n    useEffect(() =>{\r\n        const loadingToast = toast.loading('Loading...')\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id,\r\n                    username:res.data.user\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n                toast.dismiss(loadingToast)\r\n            })\r\n        \r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id,\r\n                        user:res.data.user\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                    toast.success('Edited!')\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-row justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\"card selectedPost\">\r\n            <form className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 input form-control\"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"6\" placeholder={selectedPost.text} className=\"w-75 form-control\"></textarea>\r\n                <small> {errorState} </small>\r\n            </form>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'300px', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - {selectedPost.username} </h6>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","import { Link } from 'react-router-dom';\r\n\r\nconst Forum = ({forum}) =>{\r\n    const {name, description} = forum\r\n    return (\r\n            <Link to={`/Forum/${name}`} >\r\n        <main  className='forum'>\r\n                <h2> {name} </h2>\r\n                <p> {description} </p>\r\n            {/* <button>\r\n                Join\r\n                <Icon.PlusLg/>\r\n                </button>\r\n                <button>\r\n                Delete\r\n                <Icon.X/>\r\n            </button> */}\r\n        </main>\r\n            </Link>\r\n    )\r\n}\r\n\r\nexport default Forum;","import { useState } from \"react\"\r\n\r\nconst ForumForm = ({showModal, setShowModal, createForm}) =>{\r\n    const [newForum, setNewForum] = useState({name:'', description:''})\r\n\r\n    const handleCreateForum = e =>{\r\n        e.preventDefault();\r\n        createForm(newForum)\r\n    }\r\n    const handleNameChange = e =>{setNewForum(prevState => ({...prevState, name:e.target.value}))}\r\n    const handleDescriptionChange = e =>{setNewForum(prevState => ({...prevState, description:e.target.value}))}\r\n\r\n    const handLeModalClick = e =>{\r\n        if (e.target.classList[0] === 'forumFormModal') {\r\n            setShowModal(false)\r\n        }\r\n    }\r\n    return(\r\n        <main onClick={handLeModalClick} style={showModal ? {} : {display:'none'}} className='forumFormModal'>\r\n            <form  onSubmit={handleCreateForum} style={{margin:'0 auto'}} className='forumForm'>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input placeholder='Name' value={newForum.name} onChange={handleNameChange} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Description</label>\r\n                    <textarea placeholder='Description' value={newForum.description} onChange={handleDescriptionChange} className=\"form-control\" rows='4'/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-main\">Create</button>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ForumForm;","import * as Icon from 'react-bootstrap-icons'\r\nimport { useEffect, useState } from 'react';\r\n//Components\r\nimport Forum from './Forum'\r\nimport ForumForm from './ForumForm';\r\n\r\nconst Forums = ({ forums, createForm, showModal, setShowModal }) =>{\r\n    const [searchedForum, setSearchedForum] = useState('')\r\n    const [foundForums, setFoundForums] = useState(forums)\r\n    useEffect(()=>{\r\n        setFoundForums(forums)\r\n    }, [forums])\r\n\r\n    const handleSearchChange = e =>{\r\n        setSearchedForum(e.target.value)\r\n        if (e.target.value !== '') {\r\n            let foundsList = [];\r\n            forums.forEach(forum => {\r\n                if(forum.name.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                    foundsList.push(forum)\r\n                }\r\n            });\r\n            setFoundForums(foundsList)\r\n        }\r\n        else{\r\n            setFoundForums(forums)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main > \r\n            <ForumForm createForm={createForm} showModal={showModal} setShowModal={setShowModal} />\r\n            <button onClick={() => setShowModal(prevState => !prevState)} className={showModal ? 'btn btn-danger mt-1 mx-2 position-fixed' :'btn btn-forum mt-1 mx-2 position-fixed'}>\r\n                {showModal ? 'Cancel' : 'Create Forum'}\r\n            </button>\r\n            <h2 style={{textAlign:'center'}}> Search for Forums </h2>\r\n                <div className='forumSearchBar  d-flex align-items-center justify-content-center gap-2'>\r\n                    <Icon.Search/>\r\n                    <input onChange={handleSearchChange} value={searchedForum} placeholder='Just type...' type='text'></input>\r\n                </div>\r\n            <h4 className='mt-3 mb-2' style={{textAlign:'center'}}> {`${foundForums.length} ${foundForums.length !== 1 ? 'Forums' : 'Forum'}`} </h4>\r\n            {/* <ForumForm /> */}\r\n            <ul className='forumsContainer'>\r\n                {foundForums.map(forum =>{\r\n                    return (\r\n                        <div key={forum.name}>\r\n                           <Forum key={forum.name} forum={forum} />\r\n                        </div>\r\n                    \r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Forums;","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LogInForm = ({logInFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Renders\r\n    const renderLogInForm = () =>{\r\n        return(\r\n            <form onSubmit={handleSubmit}  className='logInForm'>\r\n                <h3>Log In</h3>\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                    value={formUser.username} \r\n                    type=\"text\" className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input \r\n                    onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))}\r\n                    value={formUser.password} \r\n                     type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                     />\r\n                </div>\r\n                <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary \">Log In</button>\r\n                <Link to='/Register'>You don´t have an account?</Link>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            logInFunction(formUser)\r\n        }\r\n    }\r\n    return user ? <Redirect to='/Home'/> : renderLogInForm();\r\n}\r\n\r\nexport default LogInForm;\r\n","import { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({registerFunction, user}) =>{\r\n\r\n    //States\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n\r\n    //Handleres\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            registerFunction(formUser)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className='logInForm'>\r\n            <h3>Register</h3>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Username</label>\r\n                <input\r\n                onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                value={formUser.username} \r\n                type=\"text\" className=\"form-control\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label   className=\"form-label\">Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))} \r\n                value={formUser.password} \r\n                type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary\">Register</button>\r\n            <Link to='/LogIn'>You alredy have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst SelectedForum = (props) =>{\r\n    const { forum } = useParams();\r\n    const [selectedForum, setSelectedForum] = useState({name:'', description:'', users:[]})\r\n    useEffect(() =>{\r\n        axios.get(`/api/forums/${forum}`)\r\n            .then(res =>{\r\n                res.data.name\r\n                ? setSelectedForum(res.data)\r\n                : <Redirect to='/Home' />\r\n            })\r\n    }, [forum])\r\n    console.log(selectedForum)\r\n    const {name, description, users} = selectedForum\r\n    return(\r\n        <main className='selectedForum'>\r\n            <h2> {name} </h2>\r\n            <p> {description} </p>\r\n            <ul>\r\n                {users.map(user => <h3> user </h3>)}\r\n            </ul>\r\n            <h3>Posts</h3>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedForum;","import { Redirect } from 'react-router';\r\nconst Profile = ({user, logOutFunction}) =>{\r\n\r\n    const renderProfileSection = () =>{\r\n        return (\r\n            <div style={{width:'50vw', margin:'0 auto'}} className='profileSection'>\r\n                <h2>{user.username}</h2>\r\n                <button onClick={logOutFunction} > Log Out</button>\r\n                <ul>\r\n                    PostList\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            {user ? renderProfileSection() : <Redirect to='/LogIn' />}\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport * as Icon from 'react-bootstrap-icons';\nimport toast, { Toaster } from 'react-hot-toast';\n//Components =>\nimport Home from './Home'\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\nimport Forums from './components/Forums'\nimport LogInForm from './components/LogInForm'\nimport RegisterForm from './components/RegisterForm'\nimport SelectedForum from './components/SelectedForum';\n//Components <=\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Profile from './components/Profile';\n//ROutes <=\nconst App = () => {\n  const [forums, setForums] = useState([])\n  const [postsList, setPostsList] = useState([])\n  const [user, setUser] = useState(null)\n  const [navBarOpen, setNavBarOpen] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n\n  useEffect( () =>{\n    //Fetch de los posts\n    axios.get('/api/posts')\n    .then(res =>{\n      setPostsList(res.data.posts)\n    })\n    //Fetch de los forums\n    axios.get('/api/forums')\n    .then(res => {\n      setForums(res.data.forums)\n    })\n    //Fetch de los users\n    axios.get('/api/user')\n    .then(res =>{\n      if (!res.data.msg) {\n        setUser(res.data)\n        toast.success(`Welcome back ${res.data.username}!`, {duration:1500})\n      }else{\n        return null;\n      }\n    })\n  }, [])\n  \n  const addPost = (post) =>{\n    const addPostPromise = axios.post('/api/posts', post)\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\n    toast.promise(addPostPromise, {\n      loading:'Posting...',\n      success:'Posted!',\n      error:res =>`This happened:${res}`\n    })\n  };\n\n  const deletePost = (id) =>{\n    let newPostList = []\n    const deletePromise = axios.delete(`/api/posts/${id}`)\n      .then(res =>{\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\n        setPostsList(newPostList);\n      });\n      toast.promise(deletePromise,{\n        loading: 'Deleting...',\n        success: `Successfully deleted`,\n        error: (err) => `This just happened: ${err.toString()}!`,\n      })\n  }\n\n  const updatePost = (id, newPost) =>{\n    const loadingToast = toast.loading('Updating...')\n    const updatePostPromise = axios.put(`/api/posts/${id}`, newPost)\n      .then(res => {\n        toast.dismiss(loadingToast)\n        if(res.data[0]){\n          setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data))\n        } \n        toast.success('Successfully updated!')\n      })\n    if(!newPost.likes){\n      toast.promise(updatePostPromise, {\n        loading:'Updating...',\n        success:'Updated!',\n        error:res => `This happened: ${res}`\n      })\n    }\n  \n    }\n\n\n  //User functions\n  const logInFunction = (user) =>{\n      const logInPromise = axios.post('api/login', user)\n        .then(res => {\n          const [state, user] = res.data\n          console.log(state, user);\n          const {username, _id, createdAt, savedPosts} = user\n          const userWrongFunction = () =>{\n            setUser(null);\n            toast.error('Username or Password wrong!')\n          }\n          state \n            ? setUser({username, id:_id, createdAt, savedPosts})\n            : userWrongFunction()\n        })\n      //Toast\n      toast.promise(logInPromise, {\n        loading:'Login in...',\n        error: 'User or Password are wrong!',\n        success:'Logged'\n      })\n  }  \n  const registerFunction = (user) =>{\n    if (user.username !== '' && user.password !== '') {\n      const registerPromise = axios.post('api/register', user)\n      //Toast\n      toast.promise(registerPromise, {\n        loading:'Registering...',\n        success:res => `${res.data}`,\n        error:'User alredy exist!'\n      })\n    }else{\n      //Toast\n      \n    }\n  }\n  const logOutFunction = () =>{\n    axios.get('/api/logout')\n      .then(() => {\n        setUser(null)\n        toast('Logged Out!', {icon:'👌'});\n      })\n  }\n  \n  const savePost = postId =>{\n    axios.put(`/api/users/${user ? user.id : 'none'}`, {postId, savedPosts:user.savedPosts})\n      .then(res => console.log(res))\n  }\n\n  const [displayShow, setDisplayShow] = useState(false)\n  const handleClick = e =>{\n    if (e.target.classList[0] !== 'navItem') {\n      setDisplayShow(false)\n    }\n  }\n\n  const createForm = newForm =>{\n    const createFormPromise = axios.post('/api/forums', newForm)\n      .then(res => {\n        if(res.data) {\n          setForums(prev => [...prev, res.data[1]])\n          setShowModal(false)  \n        }\n      })\n    toast.promise(createFormPromise, {\n      loading:'Creating form...',\n      success:'Forum created!',\n      error:'The forum alredy exist!'\n    })\n  }\n\n  const activeResponsive = () =>{\n    setNavBarOpen(prev => !prev)\n  }\n\n  return (\n    <Router>\n    <div onClick={handleClick} className='main'>\n      <Toaster \n       position=\"top-right\"\n       reverseOrder={false}\n       />\n      <div className='navBarResponsiveBtn'>\n        <button onClick={window.window < 600 ? {} : () =>{ activeResponsive() }}>\n          {navBarOpen ? <Icon.X/> : <Icon.List/>}\n        </button>\n        <button className='gap-2 navText' >\n          <Icon.CupFill/>\n          CoffeePosts\n        </button>\n      </div>\n      <NavBar\n      setNavBarOpen={setNavBarOpen}\n      navBarOpen={navBarOpen}\n      postsList={postsList}\n      user={user}\n      setDisplayShow={setDisplayShow}\n      displayShow={displayShow}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n      <Route path=\"/Post/:postId&:editingParam\">\n          <SelectedPost \n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            setPostsList={setPostsList}\n            />\n      </Route>\n      <Route path=\"/Post/:postId\">\n          <SelectedPost \n            user={user} \n            addPost={addPost}\n            setPostsList={setPostsList}\n            deletePost={deletePost} \n            updatePost={updatePost}\n          />\n      </Route>\n      <Route path=\"/Forums\">\n        <Forums forums={forums} createForm={createForm} showModal={showModal} setShowModal={setShowModal} />\n      </Route>\n      <Route path=\"/Forum/:forum\">\n        <SelectedForum/>\n      </Route>\n      <Route path=\"/Profile\">\n        <Profile\n        logOutFunction={logOutFunction}\n        user={user} \n        />\n      </Route>\n      <Route path=\"/LogIn\">\n      <LogInForm \n        logInFunction={logInFunction}\n        user={user}\n          />\n      </Route>\n      <Route path=\"/Register\">\n      <RegisterForm \n      registerFunction={registerFunction}\n      user={user}\n          />\n      </Route>\n      <Route path=\"/Home\">\n      <Home \n          user={user} \n          postsList={postsList}\n          addPost={addPost}\n          deletePost={deletePost} \n          updatePost={updatePost}\n          savePost={savePost}\n          />\n      </Route>\n      <Route path='/:noFound'>\n        {() =>{\n          return(<h3 style={{textAlign:'center'}}>404 Page Not Found</h3>)\n        }}\n      </Route>\n      <Route path=\"/\">\n        <Redirect to='/Home'/>\n      </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n/*\n <div className='main'>\n            \n      <NavBar\n      postsList={postsList} />\n\n    <main className='d-flex flex-row justify-content-center'>\n    <section className='mainSection'>\n        <div className='d-flex justify-content-center w-100'>\n          <PostForm\n          addPost={addPost} />\n        </div>\n        <div className='mt-3 postsContainer'>\n          {postsList.map(post =>(\n            <Post\n            key={post._id}\n            title={post.title}\n            text={post.text}\n            deletePost={deletePost}\n            id={post._id}\n            />\n          ))}\n        </div>\n      </section>\n    </main>\n    </div>\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}