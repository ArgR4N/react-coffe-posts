{"version":3,"sources":["../../../node_modules/discord.js/src/client/websocket/handlers sync /^/.*/.js$","components/Post.js","components/PostForm.js","Home.js","components/NavBar.js","SelectedPost.js","components/Forums.js","components/LogInForm.js","components/RegisterForm.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Post","title","text","deletePost","coffees","updatePost","useState","options","setOptions","state","counter","coffeesState","setCoffeesState","saveState","setSaveState","className","to","onClick","prevState","style","opacity","transition","visibility","onMouseLeave","newPost","likes","PostForm","addPost","userId","setNewPost","errorState","setErrorState","isOpen","setIsOpen","lengthEnsureFunction","split","length","height","onSubmit","preventDefault","fontSize","marginBottom","cursor","margin","userSelect","width","type","onChange","target","value","placeholder","rows","Home","postsList","user","post","_id","NavBar","searchText","setSearchText","displayShow","setDisplayShow","foundPosts","setFoundPosts","username","foundsList","forEach","toLowerCase","includes","push","display","color","SelectedPost","setPostsList","selectedPost","setSelectedPost","original","actual","setCoffees","useParams","postId","editingParam","editing","setEditing","useEffect","axios","get","then","res","newSelectedPost","data","flexDirection","transform","updatedPost","put","posts","Forums","props","LogInForm","logInFunction","useHistory","password","formUser","setFormUser","marginRight","RegisterForm","registerFunction","passowrd","Profile","logOutFunction","App","setUser","newPostList","delete","path","console","log","createdAt","alert","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69283809.chunk.js","sourcesContent":["var map = {\n\t\"./CHANNEL_CREATE.js\": 272,\n\t\"./CHANNEL_DELETE.js\": 273,\n\t\"./CHANNEL_PINS_UPDATE.js\": 274,\n\t\"./CHANNEL_UPDATE.js\": 275,\n\t\"./GUILD_BAN_ADD.js\": 276,\n\t\"./GUILD_BAN_REMOVE.js\": 277,\n\t\"./GUILD_CREATE.js\": 278,\n\t\"./GUILD_DELETE.js\": 279,\n\t\"./GUILD_EMOJIS_UPDATE.js\": 280,\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": 281,\n\t\"./GUILD_MEMBERS_CHUNK.js\": 282,\n\t\"./GUILD_MEMBER_ADD.js\": 283,\n\t\"./GUILD_MEMBER_REMOVE.js\": 284,\n\t\"./GUILD_MEMBER_UPDATE.js\": 285,\n\t\"./GUILD_ROLE_CREATE.js\": 286,\n\t\"./GUILD_ROLE_DELETE.js\": 287,\n\t\"./GUILD_ROLE_UPDATE.js\": 288,\n\t\"./GUILD_UPDATE.js\": 289,\n\t\"./INVITE_CREATE.js\": 290,\n\t\"./INVITE_DELETE.js\": 291,\n\t\"./MESSAGE_CREATE.js\": 292,\n\t\"./MESSAGE_DELETE.js\": 293,\n\t\"./MESSAGE_DELETE_BULK.js\": 294,\n\t\"./MESSAGE_REACTION_ADD.js\": 295,\n\t\"./MESSAGE_REACTION_REMOVE.js\": 296,\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": 297,\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": 298,\n\t\"./MESSAGE_UPDATE.js\": 299,\n\t\"./PRESENCE_UPDATE.js\": 300,\n\t\"./READY.js\": 301,\n\t\"./RESUMED.js\": 302,\n\t\"./TYPING_START.js\": 303,\n\t\"./USER_UPDATE.js\": 304,\n\t\"./VOICE_SERVER_UPDATE.js\": 305,\n\t\"./VOICE_STATE_UPDATE.js\": 306,\n\t\"./WEBHOOKS_UPDATE.js\": 307,\n\t\"./index.js\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 271;","import { useState } from 'react'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nconst Post = ({title, text, deletePost, id,  coffees, updatePost}) =>{\r\n    const [options, setOptions] = useState(false)\r\n    const [coffeesState, setCoffeesState] = useState({state:false, counter:coffees})\r\n    const [saveState, setSaveState] = useState(false)\r\n    //Handlers\r\n    const handleDelete = () =>{\r\n        deletePost(id)\r\n    }\r\n    const handleAddCoffee = () =>{\r\n        if (coffees !== coffeesState.counter) {\r\n            const newPost = {\r\n                title,\r\n                text,\r\n                likes:coffeesState.counter\r\n            }\r\n            updatePost(id, newPost)\r\n        }\r\n    }\r\n    return(\r\n            <div  className=\"card post \">\r\n                <Link to={`post/${id}`} className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - user</h6>\r\n                    <p className=\"card-text\">{text}</p>\r\n                </Link>\r\n                <div className='btnContainer'>\r\n                    <div>\r\n                        <button onClick={() =>{setOptions(prevState => !prevState)}}>\r\n                            <Icon.List/>\r\n                        </button>\r\n                        <div style={options ? {opacity:'1', transition:'.3s'} : {opacity:'0',transition:'.3s', visibility:'hidden'}}>\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button \r\n                                    onClick={() => setSaveState(prevState => !prevState)} \r\n                                    className={saveState ? 'unsave' : 'save'}>\r\n                                        {saveState\r\n                                        ?<Icon.BookmarkFill/>\r\n                                        :<Icon.Bookmark/>}\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <button onClick={handleDelete} className='delete'>\r\n                                        <Icon.DashCircleFill/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to={`post/${id}&editing`}>\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                    onMouseLeave={handleAddCoffee} \r\n                    onClick={() => setCoffeesState(prevState => ({state:true, counter:prevState.counter + 1}))}\r\n                    className={'Give-a-coffe mb-1'}>\r\n                        <Icon.CupFill/>\r\n                    <span className='Give-a-coffeCounter'> {coffeesState.counter > 0 ? coffeesState.counter : null} </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default Post;","import { useState } from \"react\";\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst PostForm = ({addPost, userId}) =>{\r\n    //States\r\n    const [newPost, setNewPost] = useState({title:'', text:''})\r\n    const [errorState, setErrorState] = useState('')  \r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n    //Handelers\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(userId){\r\n            if (lengthEnsureFunction()[0]) {\r\n                addPost({title:newPost.title, text:newPost.text, userId})\r\n                setNewPost({title:'', text:''})\r\n                setIsOpen(false)\r\n                setErrorState(lengthEnsureFunction()[1])\r\n            }else{\r\n                setErrorState(lengthEnsureFunction()[1])\r\n            }\r\n        }\r\n        if(!userId){\r\n            setErrorState('You need to be logged in!')\r\n        }\r\n    }\r\n\r\n    const handleTitleChange = e =>{\r\n        setNewPost(prevState => ({...prevState, title:e.target.value}))\r\n    }\r\n\r\n    const handleTextChange = e =>{\r\n        setNewPost(prevState => ({...prevState, text:e.target.value}))\r\n    }\r\n    const handleOpenFormClick = ()=>{\r\n        setIsOpen(prevState => !prevState)\r\n    }\r\nreturn(\r\n    <form style={isOpen ? {} : {height:'45px'}} onSubmit={handleSubmit} className='p-2 overflow-hidden w-75 mb-2 mt-4 card' >\r\n        <div onClick={handleOpenFormClick}  style={{fontSize:'23px', marginBottom:'10px', cursor:'pointer'}} className='d-flex  align-items-center justify-content-between openFormState'>\r\n            <h4 style={{margin:'0', userSelect:'none'}}>Create Post</h4>\r\n            <button \r\n            className={isOpen\r\n            ?'closeForm d-flex align-items-center justify-content-center' \r\n            :'openForm d-flex align-items-center justify-content-center'\r\n            }\r\n            style={{height:'23px', width:'23px'}} \r\n            type='button'>\r\n                {isOpen \r\n                ? <Icon.ArrowBarUp/>\r\n                : <Icon.ArrowBarDown/>\r\n                }\r\n            </button>\r\n        </div>\r\n        <div className=\"mb-3 w-75\">\r\n            <input onChange={handleTitleChange} value={newPost.title} placeholder='Title' type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <textarea onChange={handleTextChange} value={newPost.text}  placeholder='Text' className=\"form-control\" rows=\"6\"/>\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\" className=\"w-25 btn btn-main\">Post</button>\r\n        <small style={{userSelect:'none'}} className='mx-3'> {errorState} </small>\r\n        </div>\r\n    </form>\r\n);\r\n\r\n};\r\n\r\nexport default PostForm;","import Post from './components/Post'\r\nimport PostForm from './components/PostForm'\r\n\r\nconst Home = ( {postsList, addPost, deletePost, updatePost, user} ) =>{\r\n  return(\r\n\r\n      <main className='d-flex flex-row justify-content-center'>\r\n        <section className='mainSection'>\r\n          <div className='d-flex justify-content-center w-100'>\r\n            <PostForm\r\n            addPost={addPost} \r\n            userId={user ? user.id : false} \r\n            />\r\n          </div>\r\n          <div className='mt-3 postsContainer'>\r\n            {postsList.map(post =>(\r\n              <Post\r\n              key={post._id}\r\n              updatePost={updatePost}\r\n              title={post.title}\r\n              text={post.text}\r\n              deletePost={deletePost}\r\n              id={post._id}\r\n              coffees={post.likes}\r\n              />\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import * as Icon from 'react-bootstrap-icons';\r\nimport { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { User } from 'discord.js';\r\nconst NavBar = ({postsList, user}) =>{\r\n    //States\r\n    const [searchText, setSearchText] = useState('')\r\n    const [displayShow, setDisplayShow] = useState(false)\r\n    const [foundPosts, setFoundPosts] = useState([])\r\n    //Handelers\r\n    const handleSearchBarChange = e =>{\r\n        setSearchText(e.target.value)\r\n        if (e.target.value !== '') {\r\n            setDisplayShow(true)\r\n            let foundsList = [];\r\n            postsList.forEach(post => {\r\n            if(post.title.toLowerCase().includes(e.target.value.toLowerCase())){\r\n            foundsList.push(post)\r\n            }else{\r\n                    return null;\r\n            }\r\n            });\r\n            setFoundPosts(foundsList)\r\n        }\r\n        else{\r\n            setDisplayShow(false)\r\n            setFoundPosts([])\r\n        }\r\n    }\r\n    return(\r\n        <nav className='navBar'>\r\n            <Link to='/' className='navText'>\r\n                <Icon.CupFill/>\r\n                CoffeePosts\r\n            </Link>   \r\n            <div className='navSocailFunctions'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/Forums'>\r\n                            <div>\r\n                                <Icon.XDiamond/>\r\n                                Forums\r\n                            </div>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/Profile'>\r\n                            {user ?\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                {user.username}\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Icon.PersonFill/>\r\n                                LogIn\r\n                            </div>}\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className='navSearch'>\r\n                <Icon.Search/>\r\n                <input value={searchText} onChange={handleSearchBarChange} type='text'></input>\r\n                <section className='searchDisplay' style={displayShow ? {} : {display:'none'}}>\r\n                    <h6>Posts</h6>\r\n                    {foundPosts.length > 0\r\n                    ?\r\n                    <div> \r\n                        {foundPosts.map(post=>(\r\n                            <button className='navBarFounded'> \r\n                                <Link \r\n                                onClick={() => setDisplayShow(false)} \r\n                                to={`/post/${post._id}`} \r\n                                style={{color:'grey'}}> \r\n                                <span style={{color:'white'}}>\r\n                                {post.title}\r\n                                </span>\r\n                                - forum - user \r\n                                </Link>\r\n                            </button>\r\n                        ))} \r\n                    </div>\r\n                    : \r\n                    <h6 style={{color:'grey'}} className='mt-2'>Nothing Found!</h6>}\r\n                </section>\r\n            </div>       \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar; ","import { Link, useParams} from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nconst SelectedPost = ({updatePost, deletePost, setPostsList}) =>{\r\n    const [selectedPost, setSelectedPost] = useState({})\r\n    const [newPost, setNewPost] = useState({title:'',text:''})\r\n    const [coffees, setCoffees] = useState({original:0, actual:0})\r\n    const { postId, editingParam} = useParams() \r\n    const [editing, setEditing] = useState(editingParam)   \r\n    const [errorState, setErrorState] = useState(' ')\r\n    useEffect(() =>{\r\n        axios.get(`/api/posts/${postId}`)\r\n            .then(res => {\r\n                const newSelectedPost ={\r\n                    title:res.data.title,\r\n                    text:res.data.text,\r\n                    id:res.data._id\r\n                }\r\n                setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                setSelectedPost(newSelectedPost)\r\n                setNewPost({title:res.data.title, text:res.data.text})\r\n            })\r\n\r\n    }, [postId])\r\n    const handleAddCoffee = () =>{\r\n        if (coffees.actual !== coffees.original ) {\r\n            const newPost = {\r\n                title:selectedPost.title,\r\n                text:selectedPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            updatePost(selectedPost.id, newPost)\r\n            setCoffees(prevState => ({...prevState, original:coffees.actual}))\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        deletePost(selectedPost.id)\r\n    }\r\n    const handleUpdateNote = () =>{\r\n        if (lengthEnsureFunction()[0]) {\r\n            setEditing(false);\r\n            const updatedPost = {\r\n                title:newPost.title,\r\n                text:newPost.text,\r\n                likes:coffees.actual\r\n            }\r\n            axios.put(`/api/posts/${selectedPost.id}`, updatedPost)\r\n                .then(res =>{\r\n                    const newSelectedPost ={\r\n                        title:res.data.title,\r\n                        text:res.data.text,\r\n                        id:res.data._id\r\n                    }\r\n                    setCoffees({original:res.data.likes, actual:res.data.likes})\r\n                    setSelectedPost(newSelectedPost)\r\n                })\r\n            axios.get('/api/posts')\r\n                .then(res =>{\r\n                setPostsList(res.data.posts)\r\n      })\r\n        }else{\r\n            setErrorState(lengthEnsureFunction()[1])\r\n        }\r\n    }\r\n    const lengthEnsureFunction = () =>{\r\n        if (newPost.title === '') {\r\n            return [false, 'The title needs information!']\r\n        }\r\n        if (newPost.text === '') {\r\n            return [false, 'The text needs information!']\r\n        }\r\n        if (newPost.title.split('').length > 250) {\r\n            return [false, 'The title have a 250 characters max!']\r\n        }\r\n        if (newPost.text.split('').length > 950) {\r\n            return [false, 'The text have a 950 characters max!']\r\n        }\r\n        if (newPost.title === selectedPost.title && newPost.text === selectedPost.text) {\r\n            return [false, 'You can´t update a post with no changes!']\r\n        }\r\n        else return [true, '']\r\n    }\r\n        return(\r\n        <main className='d-flex flex-row justify-content-center'>\r\n            {selectedPost.title ? editing ?\r\n            <div  className=\"card selectedPost\">\r\n            <form className=\"gap-2 w-100 d-flex p-5 justify-content-center align-items-center\" style={{flexDirection:'column'}}>\r\n                <input onChange={e => (setNewPost(prevState => ({...prevState, title:e.target.value})))} value={newPost.title}  placeholder={selectedPost.title} className=\"w-75 input form-control\"></input>\r\n                <textarea  onChange={e => (setNewPost(prevState => ({...prevState, text:e.target.value})))} value={newPost.text} rows=\"6\" placeholder={selectedPost.text} className=\"w-75 form-control\"></textarea>\r\n                <small> {errorState} </small>\r\n            </form>\r\n            <div className='btnContainer'>\r\n                    <div >\r\n                        <ul style={{height:'300px', transform:'scale(2.2)'}} className='btnOptionsContainer d-flex flex-colums justify-content-center align-items-center gap-3'>\r\n                            <li >\r\n                                <Link onClick={handleUpdateNote} to={`/post/${selectedPost.id}`}>\r\n                                    <button>\r\n                                        <Icon.Check/>\r\n                                    </button>\r\n                                </Link>\r\n                            </li >                     \r\n                            <li >\r\n                            <Link onClick={() => setEditing(false)} to={`/post/${selectedPost.id}`}>\r\n                                   <button>\r\n                                    <Icon.X/>\r\n                                   </button>\r\n                            </Link>\r\n                            </li>                     \r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n            :\r\n            <div  className=\"card selectedPost\">\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{selectedPost.title}</h5>\r\n                    <h6 className=\"card-subtitle mb-2 text-muted\">forum - user</h6>\r\n                    <p className=\"card-text\">{selectedPost.text}</p>\r\n                </div>\r\n                <div className='btnContainer'>\r\n                        <div >\r\n                            <ul className='btnOptionsContainer'>\r\n                                <li>\r\n                                    <button className='save'>\r\n                                        <Icon.Bookmark/>\r\n                                    </button>\r\n                                </li>                     \r\n                                <li>\r\n                                    <Link to='/'>\r\n                                        <button onClick={handleDelete}  className='delete'>\r\n                                            <Icon.DashCircleFill/>\r\n                                        </button>\r\n                                    </Link>\r\n                                </li>                     \r\n                                <li>\r\n                                    <div onClick={() => setEditing(true)} >\r\n                                        <button className='edit'>\r\n                                            <Icon.PencilSquare/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <button\r\n                                        onMouseLeave={handleAddCoffee}\r\n                                        onClick={() => setCoffees(prevState => ({...prevState, actual:prevState.actual + 1}))}\r\n                                        className='Give-a-coffe mb-1'>\r\n                                            <Icon.CupFill/>\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div>\r\n                                        <small className='coffeeCounter'>\r\n                                        {coffees.actual} <Icon.CupFill/>\r\n                                        </small>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            : 'Searching ...'}        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SelectedPost;","\r\n\r\nconst Forums = props =>{\r\n    return(\r\n        <main>\r\n            \r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Forums;","import { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst LogInForm = ({logInFunction, user}) =>{\r\n    let history = useHistory()\r\n    const [formUser, setFormUser] = useState({username:'', password:''})\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            logInFunction(formUser)\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}  className='logInForm'>\r\n            <h3>Log In</h3>\r\n            <div className=\"mb-3\">\r\n                <label  className=\"form-label\">Username</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} \r\n                value={formUser.username} \r\n                type=\"text\" className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label className=\"form-label\">Password</label>\r\n                <input \r\n                onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))}\r\n                value={formUser.password} \r\n                 type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                 />\r\n            </div>\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary \">Log In</button>\r\n            <Link to='/Register'>You don´t have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LogInForm;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({registerFunction}) =>{\r\n    const [formUser, setFormUser] = useState({username:'', passowrd:''})\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(formUser.username !== '' && formUser.password !== ''){\r\n            registerFunction(formUser)\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit} className='logInForm'>\r\n            <h3>Register</h3>\r\n            <div className=\"mb-3\">\r\n                <label onChange={e => setFormUser(prevState => ({...prevState, username:e.target.value}))} value={formUser.username} className=\"form-label\">Username</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label onChange={e => setFormUser(prevState => ({...prevState, password:e.target.value}))} value={formUser.password}  className=\"form-label\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n            </div>\r\n\r\n            <button type=\"submit\" style={{marginRight:'25px'}} className=\"btn btn-primary\">Register</button>\r\n            <Link to='/LogIn'>You alredy have an account?</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nconst Profile = ({user, logOutFunction}) =>{\r\n\r\n    const renderProfileSection = () =>{\r\n        return (\r\n            <div style={{width:'50vw', margin:'0 auto'}} className='profileSection'>\r\n                <h2>{user.username}</h2>\r\n                <button onClick={logOutFunction} > Log Out</button>\r\n                <ul>\r\n                    PostList\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            {user ? renderProfileSection() : <Redirect to='/LogIn' />}\r\n        </main>\r\n        )\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n//Components =>\nimport Home from './Home'\nimport NavBar from './components/NavBar';\nimport SelectedPost from './SelectedPost'\nimport Forums from './components/Forums'\nimport LogInForm from './components/LogInForm'\nimport RegisterForm from './components/RegisterForm'\n//Components <=\n//Routes =>\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useHistory\n} from \"react-router-dom\";\nimport Profile from './components/Profile';\n//ROutes <=\nconst App = () => {\n  let history = useHistory();\n  const [postsList, setPostsList] = useState([])\n  const [user, setUser] = useState(null)\n  useEffect( () =>{\n    axios.get('/api/posts')\n      .then(res =>{\n        setPostsList(res.data.posts)\n      })\n    axios.get('/api/user')\n      .then(res =>{\n        if (res.data.username) {\n          setUser(res.data)\n        }else{\n          return null;\n        }\n      })\n  }, [])\n\n  const addPost = (post) =>{\n    axios.post('/api/posts', post)\n      .then(res => {setPostsList(prevState => [res.data, ...prevState])});\n  };\n\n  const deletePost = (id) =>{\n    let newPostList = []\n    axios.delete(`/api/posts/${id}`)\n      .then(res =>{\n        postsList.forEach(post => post._id === id ? null : newPostList.push(post));\n        setPostsList(newPostList);\n      });\n  }\n\n  const updatePost = (id, newPost) =>{\n    axios.put(`/api/posts/${id}`, newPost)\n      .then(res => setPostsList(prevState => prevState.map(post => post._id !== id ? post : res.data)))\n  }\n\n\n  //User functions\n  const logInFunction = (user) =>{\n      axios.post('api/login', user)\n        .then(res => {\n          const [state, user] = res.data\n          console.log(state, user);\n          const {username, _id, createdAt} = user\n          if (state) {\n            setUser({username, id:_id, createdAt})\n          }else{\n            alert('User wrong!')\n          }\n        })\n  }  \n  const registerFunction = (user) =>{\n    if (!(user.username !== '' && user.password !== '')) {\n      axios.post('api/register', user)\n        .then(res => {\n          console.log(res.data);\n        })\n      \n    }\n  }  \n\n  const logOutFunction = () =>{\n    axios.get('/api/logout')\n      .then(res => setUser(null))\n  }\n  return (\n    <Router>\n    <div className='main'>\n      <NavBar\n      postsList={postsList}\n      user={user}\n      />\n      <hr className='my-5'></hr>\n      <Switch>\n      <Route path=\"/Post/:postId&:editingParam\">\n          <SelectedPost \n            addPost={addPost}\n            deletePost={deletePost} \n            updatePost={updatePost}\n            setPostsList={setPostsList}\n            />\n      </Route>\n      <Route path=\"/Post/:postId\">\n          <SelectedPost \n            user={user} \n            addPost={addPost}\n            setPostsList={setPostsList}\n            deletePost={deletePost} \n            updatePost={updatePost}\n          />\n      </Route>\n      <Route path=\"/Forums\">\n        <Forums/>\n      </Route>\n      <Route path=\"/Profile\">\n        <Profile\n        logOutFunction={logOutFunction}\n        user={user} \n        />\n      </Route>\n      <Route path=\"/LogIn\">\n      <LogInForm \n        logInFunction={logInFunction}\n        user={user}\n          />\n      </Route>\n      <Route path=\"/Register\">\n      <RegisterForm \n      registerFunction={registerFunction}\n          />\n      </Route>\n      <Route path=\"/Home\">\n      <Home \n          user={user} \n          postsList={postsList}\n          addPost={addPost}\n          deletePost={deletePost} \n          updatePost={updatePost}\n          />\n      </Route>\n      <Route path='/:noFound'>\n        {() =>{\n          return(<h3 style={{textAlign:'center'}}>404 Page Not Found</h3>)\n        }}\n      </Route>\n      <Route path=\"/\">\n        <Redirect to='/Home'/>\n      </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n/*\n <div className='main'>\n            \n      <NavBar\n      postsList={postsList} />\n\n    <main className='d-flex flex-row justify-content-center'>\n    <section className='mainSection'>\n        <div className='d-flex justify-content-center w-100'>\n          <PostForm\n          addPost={addPost} />\n        </div>\n        <div className='mt-3 postsContainer'>\n          {postsList.map(post =>(\n            <Post\n            key={post._id}\n            title={post.title}\n            text={post.text}\n            deletePost={deletePost}\n            id={post._id}\n            />\n          ))}\n        </div>\n      </section>\n    </main>\n    </div>\n*/\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}